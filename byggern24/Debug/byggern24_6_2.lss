
byggern24_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000072c  000007c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800106  00800106  000007c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  000007f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000262d  00000000  00000000  000009ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b98  00000000  00000000  00002ffb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a93  00000000  00000000  00003b93  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000054c  00000000  00000000  00004628  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000691  00000000  00000000  00004b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001795  00000000  00000000  00005205  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000240  00000000  00000000  0000699a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a0 00 	jmp	0x140	; 0x140 <__ctors_end>
   4:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
   8:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
   c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  10:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  14:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  18:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  1c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  20:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  24:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  28:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  2c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  30:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  34:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  38:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  3c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  40:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  44:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  48:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  4c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  50:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  54:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  58:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  5c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  60:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  64:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  68:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>
  6c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__bad_interrupt>

00000070 <__trampolines_end>:
  70:	88 d8       	rcall	.-3824   	; 0xfffff182 <__eeprom_end+0xff7ef182>
  72:	7c 3f       	cpi	r23, 0xFC	; 252
  74:	3f 7c       	andi	r19, 0xCF	; 207
  76:	d8 88       	ldd	r13, Y+16	; 0x10
  78:	18 3c       	cpi	r17, 0xC8	; 200
  7a:	7e ff       	.word	0xff7e	; ????
  7c:	ff 7e       	andi	r31, 0xEF	; 239
  7e:	3c 18       	sub	r3, r12
  80:	1e 3f       	cpi	r17, 0xFE	; 254
  82:	7e fc       	.word	0xfc7e	; ????
  84:	fc 7e       	andi	r31, 0xEC	; 236
  86:	3f 1e       	adc	r3, r31
  88:	ff cf       	rjmp	.-2      	; 0x88 <__trampolines_end+0x18>
  8a:	9b bf       	out	0x3b, r25	; 59
  8c:	bf 9b       	sbis	0x17, 7	; 23
  8e:	cf ff       	.word	0xffcf	; ????
  90:	ff fb       	.word	0xfbff	; ????
  92:	fb df       	rcall	.-10     	; 0x8a <__trampolines_end+0x1a>
  94:	df fb       	.word	0xfbdf	; ????
  96:	fb ff       	.word	0xfffb	; ????
  98:	18 3c       	cpi	r17, 0xC8	; 200
  9a:	3c 7e       	andi	r19, 0xEC	; 236
  9c:	ff 3c       	cpi	r31, 0xCF	; 207
  9e:	3c 3c       	cpi	r19, 0xCC	; 204
  a0:	e0 38       	cpi	r30, 0x80	; 128
  a2:	0c 3e       	cpi	r16, 0xEC	; 236
  a4:	f2 33       	cpi	r31, 0x32	; 50
  a6:	19 1f       	adc	r17, r25
  a8:	1f 19       	sub	r17, r15
  aa:	33 f2       	brvs	.-116    	; 0x38 <__zero_reg__+0x37>
  ac:	3e 0c       	add	r3, r14
  ae:	38 e0       	ldi	r19, 0x08	; 8
  b0:	07 0e       	add	r0, r23
  b2:	7e 9f       	mul	r23, r30
  b4:	87 86       	std	Z+15, r8	; 0x0f
  b6:	9c 84       	ldd	r9, Y+12	; 0x0c
  b8:	84 9c       	mul	r8, r4
  ba:	86 87       	std	Z+14, r24	; 0x0e
  bc:	9f 7e       	andi	r25, 0xEF	; 239
  be:	0e 07       	cpc	r16, r30
  c0:	00 00       	nop
  c2:	c0 c0       	rjmp	.+384    	; 0x244 <oled_goto_column+0x6>
  c4:	f0 f0       	brcs	.+60     	; 0x102 <__trampolines_end+0x92>
  c6:	fc fc       	.word	0xfcfc	; ????
  c8:	0c 0c       	add	r0, r12
  ca:	0f 0f       	add	r16, r31
  cc:	c3 c3       	rjmp	.+1926   	; 0x854 <__data_load_end+0x122>
  ce:	ff ff       	.word	0xffff	; ????
  d0:	ff ff       	.word	0xffff	; ????
  d2:	c3 c3       	rjmp	.+1926   	; 0x85a <__data_load_end+0x128>
  d4:	0f 0f       	add	r16, r31
  d6:	0c 0c       	add	r0, r12
  d8:	fc fc       	.word	0xfcfc	; ????
  da:	f0 f0       	brcs	.+60     	; 0x118 <__trampolines_end+0xa8>
  dc:	c0 c0       	rjmp	.+384    	; 0x25e <oled_reset+0x10>
  de:	00 00       	nop
  e0:	fc fc       	.word	0xfcfc	; ????
  e2:	0f 0f       	add	r16, r31
  e4:	00 00       	nop
  e6:	0f 0f       	add	r16, r31
  e8:	ff ff       	.word	0xffff	; ????
  ea:	0f 0f       	add	r16, r31
  ec:	03 03       	mulsu	r16, r19
  ee:	03 03       	mulsu	r16, r19
  f0:	03 03       	mulsu	r16, r19
  f2:	03 03       	mulsu	r16, r19
  f4:	0f 0f       	add	r16, r31
  f6:	ff ff       	.word	0xffff	; ????
  f8:	0f 0f       	add	r16, r31
  fa:	00 00       	nop
  fc:	0f 0f       	add	r16, r31
  fe:	fc fc       	.word	0xfcfc	; ????
 100:	3f 3f       	cpi	r19, 0xFF	; 255
 102:	fc fc       	.word	0xfcfc	; ????
 104:	fc fc       	.word	0xfcfc	; ????
 106:	ff ff       	.word	0xffff	; ????
 108:	3f 3f       	cpi	r19, 0xFF	; 255
 10a:	3c 3c       	cpi	r19, 0xCC	; 204
 10c:	f0 f0       	brcs	.+60     	; 0x14a <__ctors_end+0xa>
 10e:	30 30       	cpi	r19, 0x00	; 0
 110:	30 30       	cpi	r19, 0x00	; 0
 112:	f0 f0       	brcs	.+60     	; 0x150 <__do_copy_data+0x4>
 114:	3c 3c       	cpi	r19, 0xCC	; 204
 116:	3f 3f       	cpi	r19, 0xFF	; 255
 118:	ff ff       	.word	0xffff	; ????
 11a:	fc fc       	.word	0xfcfc	; ????
 11c:	fc fc       	.word	0xfcfc	; ????
 11e:	3f 3f       	cpi	r19, 0xFF	; 255
 120:	00 00       	nop
 122:	00 00       	nop
 124:	3f 3f       	cpi	r19, 0xFF	; 255
 126:	c3 c3       	rjmp	.+1926   	; 0x8ae <__data_load_end+0x17c>
 128:	c0 c0       	rjmp	.+384    	; 0x2aa <oled_print_mario_large+0x4>
 12a:	c0 c0       	rjmp	.+384    	; 0x2ac <oled_print_mario_large+0x6>
 12c:	c3 c3       	rjmp	.+1926   	; 0x8b4 <__data_load_end+0x182>
 12e:	c0 c0       	rjmp	.+384    	; 0x2b0 <oled_print_mario_large+0xa>
 130:	c0 c0       	rjmp	.+384    	; 0x2b2 <oled_print_mario_large+0xc>
 132:	c3 c3       	rjmp	.+1926   	; 0x8ba <__data_load_end+0x188>
 134:	c0 c0       	rjmp	.+384    	; 0x2b6 <oled_print_mario_large+0x10>
 136:	c0 c0       	rjmp	.+384    	; 0x2b8 <oled_print_mario_large+0x12>
 138:	c3 c3       	rjmp	.+1926   	; 0x8c0 <__data_load_end+0x18e>
 13a:	3f 3f       	cpi	r19, 0xFF	; 255
 13c:	00 00       	nop
	...

00000140 <__ctors_end>:
 140:	11 24       	eor	r1, r1
 142:	1f be       	out	0x3f, r1	; 63
 144:	cf ef       	ldi	r28, 0xFF	; 255
 146:	d4 e0       	ldi	r29, 0x04	; 4
 148:	de bf       	out	0x3e, r29	; 62
 14a:	cd bf       	out	0x3d, r28	; 61

0000014c <__do_copy_data>:
 14c:	11 e0       	ldi	r17, 0x01	; 1
 14e:	a0 e0       	ldi	r26, 0x00	; 0
 150:	b1 e0       	ldi	r27, 0x01	; 1
 152:	ec e2       	ldi	r30, 0x2C	; 44
 154:	f7 e0       	ldi	r31, 0x07	; 7
 156:	02 c0       	rjmp	.+4      	; 0x15c <__do_copy_data+0x10>
 158:	05 90       	lpm	r0, Z+
 15a:	0d 92       	st	X+, r0
 15c:	a6 30       	cpi	r26, 0x06	; 6
 15e:	b1 07       	cpc	r27, r17
 160:	d9 f7       	brne	.-10     	; 0x158 <__do_copy_data+0xc>

00000162 <__do_clear_bss>:
 162:	21 e0       	ldi	r18, 0x01	; 1
 164:	a6 e0       	ldi	r26, 0x06	; 6
 166:	b1 e0       	ldi	r27, 0x01	; 1
 168:	01 c0       	rjmp	.+2      	; 0x16c <.do_clear_bss_start>

0000016a <.do_clear_bss_loop>:
 16a:	1d 92       	st	X+, r1

0000016c <.do_clear_bss_start>:
 16c:	a4 31       	cpi	r26, 0x14	; 20
 16e:	b2 07       	cpc	r27, r18
 170:	e1 f7       	brne	.-8      	; 0x16a <.do_clear_bss_loop>
 172:	0e 94 db 00 	call	0x1b6	; 0x1b6 <main>
 176:	0c 94 94 03 	jmp	0x728	; 0x728 <_exit>

0000017a <__bad_interrupt>:
 17a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017e <ADC_read>:
 17e:	8d 5f       	subi	r24, 0xFD	; 253
 180:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 184:	82 e4       	ldi	r24, 0x42	; 66
 186:	8a 95       	dec	r24
 188:	f1 f7       	brne	.-4      	; 0x186 <ADC_read+0x8>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <ADC_read+0xe>
 18c:	80 91 00 14 	lds	r24, 0x1400
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	08 95       	ret

00000194 <joystick_init>:
static int x_middle_pos;
static int y_middle_pos;

void joystick_init()
{
	x_middle_pos = ADC_read(2);
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 bf 00 	call	0x17e	; 0x17e <ADC_read>
 19c:	90 93 09 01 	sts	0x0109, r25
 1a0:	80 93 08 01 	sts	0x0108, r24
	y_middle_pos = ADC_read(1);
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	0e 94 bf 00 	call	0x17e	; 0x17e <ADC_read>
 1ac:	90 93 07 01 	sts	0x0107, r25
 1b0:	80 93 06 01 	sts	0x0106, r24
 1b4:	08 95       	ret

000001b6 <main>:
	}
}

int main(void)
{
	USART_Init(MYUBRR);
 1b6:	8f e1       	ldi	r24, 0x1F	; 31
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <USART_Init>
	SRAM_init();
 1be:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SRAM_init>
	joystick_init();
 1c2:	0e 94 ca 00 	call	0x194	; 0x194 <joystick_init>
	oled_init();
 1c6:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <oled_init>
	//test_ui();
	//SRAM_test();
	
	oled_test();
 1ca:	0e 94 de 01 	call	0x3bc	; 0x3bc <oled_test>
	//test_joystick();
	
	
	
	
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	08 95       	ret

000001d4 <oled_init>:
		temp_y = (a * temp_x + b);
		printf("x: %d, y: %d\n\r", temp_x, temp_y);
		write_pixel(temp_x, temp_y);
	}
	
}
 1d4:	e0 e0       	ldi	r30, 0x00	; 0
 1d6:	f0 e1       	ldi	r31, 0x10	; 16
 1d8:	8e ea       	ldi	r24, 0xAE	; 174
 1da:	80 83       	st	Z, r24
 1dc:	81 ea       	ldi	r24, 0xA1	; 161
 1de:	80 83       	st	Z, r24
 1e0:	8a ed       	ldi	r24, 0xDA	; 218
 1e2:	80 83       	st	Z, r24
 1e4:	82 e1       	ldi	r24, 0x12	; 18


void oled_write_cmd(unsigned char ins_c)
{
	volatile char *ext_oled = (char *) OLED_COMMAND_MEM; // OLED Command
	ext_oled[0] = ins_c;
 1e6:	80 83       	st	Z, r24
 1e8:	88 ec       	ldi	r24, 0xC8	; 200
 1ea:	80 83       	st	Z, r24
 1ec:	88 ea       	ldi	r24, 0xA8	; 168
 1ee:	80 83       	st	Z, r24
 1f0:	8f e3       	ldi	r24, 0x3F	; 63
 1f2:	80 83       	st	Z, r24
 1f4:	85 ed       	ldi	r24, 0xD5	; 213
 1f6:	80 83       	st	Z, r24
 1f8:	80 e8       	ldi	r24, 0x80	; 128
 1fa:	80 83       	st	Z, r24
 1fc:	81 e8       	ldi	r24, 0x81	; 129
 1fe:	80 83       	st	Z, r24
 200:	80 e5       	ldi	r24, 0x50	; 80
 202:	80 83       	st	Z, r24
 204:	89 ed       	ldi	r24, 0xD9	; 217
 206:	80 83       	st	Z, r24
 208:	81 e2       	ldi	r24, 0x21	; 33
 20a:	80 83       	st	Z, r24
 20c:	80 e2       	ldi	r24, 0x20	; 32
 20e:	80 83       	st	Z, r24
 210:	10 82       	st	Z, r1
 212:	8b ed       	ldi	r24, 0xDB	; 219
 214:	80 83       	st	Z, r24
 216:	80 e3       	ldi	r24, 0x30	; 48
 218:	80 83       	st	Z, r24
 21a:	8d ea       	ldi	r24, 0xAD	; 173
 21c:	80 83       	st	Z, r24
 21e:	10 82       	st	Z, r1
 220:	84 ea       	ldi	r24, 0xA4	; 164
 222:	80 83       	st	Z, r24
 224:	86 ea       	ldi	r24, 0xA6	; 166
 226:	80 83       	st	Z, r24
 228:	8f ea       	ldi	r24, 0xAF	; 175
 22a:	80 83       	st	Z, r24
 22c:	08 95       	ret

0000022e <oled_goto_line>:
 22e:	e0 e0       	ldi	r30, 0x00	; 0
 230:	f0 e1       	ldi	r31, 0x10	; 16
 232:	92 e2       	ldi	r25, 0x22	; 34
 234:	90 83       	st	Z, r25
 236:	80 83       	st	Z, r24
 238:	87 e0       	ldi	r24, 0x07	; 7
 23a:	80 83       	st	Z, r24
 23c:	08 95       	ret

0000023e <oled_goto_column>:
 23e:	e0 e0       	ldi	r30, 0x00	; 0
 240:	f0 e1       	ldi	r31, 0x10	; 16
 242:	91 e2       	ldi	r25, 0x21	; 33
 244:	90 83       	st	Z, r25
 246:	80 83       	st	Z, r24
 248:	8f e7       	ldi	r24, 0x7F	; 127
 24a:	80 83       	st	Z, r24
 24c:	08 95       	ret

0000024e <oled_reset>:
}


void oled_reset()
{
	oled_goto_line(0);
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 17 01 	call	0x22e	; 0x22e <oled_goto_line>
	oled_goto_column(0);
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	0e 94 1f 01 	call	0x23e	; 0x23e <oled_goto_column>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	94 e0       	ldi	r25, 0x04	; 4


void oled_write_data(unsigned char ins_d)
{
	volatile char *ext_oled = (char *) OLED_DATA_MEM; // OLED Data
	ext_oled[0] = ins_d;
 25e:	e0 e0       	ldi	r30, 0x00	; 0
 260:	f2 e1       	ldi	r31, 0x12	; 18
 262:	10 82       	st	Z, r1
 264:	01 97       	sbiw	r24, 0x01	; 1

void oled_reset()
{
	oled_goto_line(0);
	oled_goto_column(0);
	for(int i = 0; i < 1024; i++)
 266:	00 97       	sbiw	r24, 0x00	; 0
 268:	e1 f7       	brne	.-8      	; 0x262 <oled_reset+0x14>
	{
		oled_write_data(0x00);
	}
	
}
 26a:	08 95       	ret

0000026c <oled_pos>:
	}
}


void oled_pos(uint8_t row,uint8_t column)
{
 26c:	cf 93       	push	r28
 26e:	c6 2f       	mov	r28, r22
	oled_goto_line(row);
 270:	0e 94 17 01 	call	0x22e	; 0x22e <oled_goto_line>
	oled_goto_column(column);
 274:	8c 2f       	mov	r24, r28
 276:	0e 94 1f 01 	call	0x23e	; 0x23e <oled_goto_column>
}
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <oled_print_special_char>:
	
}


void oled_print_special_char (int code)
{
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	fc 01       	movw	r30, r24
 28c:	e0 59       	subi	r30, 0x90	; 144
 28e:	ff 4f       	sbci	r31, 0xFF	; 255
 290:	88 58       	subi	r24, 0x88	; 136
 292:	9f 4f       	sbci	r25, 0xFF	; 255


void oled_write_data(unsigned char ins_d)
{
	volatile char *ext_oled = (char *) OLED_DATA_MEM; // OLED Data
	ext_oled[0] = ins_d;
 294:	a0 e0       	ldi	r26, 0x00	; 0
 296:	b2 e1       	ldi	r27, 0x12	; 18
{
	char mychar;
	
	for (int k = 0; k < 8; k++)
	{
		mychar =  pgm_read_byte_near(specialChar[code] + k);
 298:	24 91       	lpm	r18, Z


void oled_write_data(unsigned char ins_d)
{
	volatile char *ext_oled = (char *) OLED_DATA_MEM; // OLED Data
	ext_oled[0] = ins_d;
 29a:	2c 93       	st	X, r18
 29c:	31 96       	adiw	r30, 0x01	; 1

void oled_print_special_char (int code)
{
	char mychar;
	
	for (int k = 0; k < 8; k++)
 29e:	e8 17       	cp	r30, r24
 2a0:	f9 07       	cpc	r31, r25
 2a2:	d1 f7       	brne	.-12     	; 0x298 <oled_print_special_char+0x1a>
	{
		mychar =  pgm_read_byte_near(specialChar[code] + k);
		oled_write_data(mychar);
	}
}
 2a4:	08 95       	ret

000002a6 <oled_print_mario_large>:
		
	}	
}

void oled_print_mario_large(uint8_t row,uint8_t column)
{
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	c8 2f       	mov	r28, r24
 2ac:	d6 2f       	mov	r29, r22
	oled_pos(row, column);
 2ae:	0e 94 36 01 	call	0x26c	; 0x26c <oled_pos>
	oled_print_special_char(10);
 2b2:	8a e0       	ldi	r24, 0x0A	; 10
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(11);
 2ba:	8b e0       	ldi	r24, 0x0B	; 11
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(12);
 2c2:	8c e0       	ldi	r24, 0x0C	; 12
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(13);
 2ca:	8d e0       	ldi	r24, 0x0D	; 13
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_pos(row+1, column);
 2d2:	6d 2f       	mov	r22, r29
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	8c 0f       	add	r24, r28
 2d8:	0e 94 36 01 	call	0x26c	; 0x26c <oled_pos>
	oled_print_special_char(14);
 2dc:	8e e0       	ldi	r24, 0x0E	; 14
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(15);
 2e4:	8f e0       	ldi	r24, 0x0F	; 15
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(16);
 2ec:	80 e1       	ldi	r24, 0x10	; 16
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(17);
 2f4:	81 e1       	ldi	r24, 0x11	; 17
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_pos(row+2, column);
 2fc:	6d 2f       	mov	r22, r29
 2fe:	82 e0       	ldi	r24, 0x02	; 2
 300:	8c 0f       	add	r24, r28
 302:	0e 94 36 01 	call	0x26c	; 0x26c <oled_pos>
	oled_print_special_char(18);
 306:	82 e1       	ldi	r24, 0x12	; 18
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(19);
 30e:	83 e1       	ldi	r24, 0x13	; 19
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(20);
 316:	84 e1       	ldi	r24, 0x14	; 20
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(21);
 31e:	85 e1       	ldi	r24, 0x15	; 21
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_pos(row+3, column);
 326:	6d 2f       	mov	r22, r29
 328:	83 e0       	ldi	r24, 0x03	; 3
 32a:	8c 0f       	add	r24, r28
 32c:	0e 94 36 01 	call	0x26c	; 0x26c <oled_pos>
	oled_print_special_char(22);
 330:	86 e1       	ldi	r24, 0x16	; 22
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(23);
 338:	87 e1       	ldi	r24, 0x17	; 23
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(24);
 340:	88 e1       	ldi	r24, 0x18	; 24
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
	oled_print_special_char(25);
 348:	89 e1       	ldi	r24, 0x19	; 25
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 3f 01 	call	0x27e	; 0x27e <oled_print_special_char>
}
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	08 95       	ret

00000356 <oled_animate_mario_large>:
		}
	}
}

void oled_animate_mario_large()
{
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
	int row = 0;
	int clm = 0;
	int i, j;
	
	oled_reset();
 35a:	0e 94 27 01 	call	0x24e	; 0x24e <oled_reset>
	for (i = 0; i < 5; i++)
 35e:	c0 e0       	ldi	r28, 0x00	; 0
 360:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_print_mario_large(i,0);
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	ce 01       	movw	r24, r28
 368:	0e 94 53 01 	call	0x2a6	; 0x2a6 <oled_print_mario_large>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36c:	2f e3       	ldi	r18, 0x3F	; 63
 36e:	8d e0       	ldi	r24, 0x0D	; 13
 370:	93 e0       	ldi	r25, 0x03	; 3
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <oled_animate_mario_large+0x1c>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <oled_animate_mario_large+0x26>
 37c:	00 00       	nop
		_delay_ms(1000);
		oled_reset();
 37e:	0e 94 27 01 	call	0x24e	; 0x24e <oled_reset>
	int row = 0;
	int clm = 0;
	int i, j;
	
	oled_reset();
	for (i = 0; i < 5; i++)
 382:	21 96       	adiw	r28, 0x01	; 1
 384:	c5 30       	cpi	r28, 0x05	; 5
 386:	d1 05       	cpc	r29, r1
 388:	61 f7       	brne	.-40     	; 0x362 <oled_animate_mario_large+0xc>
		oled_print_mario_large(i,0);
		_delay_ms(1000);
		oled_reset();
	}
	i--;
	for (j = 0; j < 96; j = j+3)
 38a:	c0 e0       	ldi	r28, 0x00	; 0
 38c:	d0 e0       	ldi	r29, 0x00	; 0
	{
		oled_reset();
 38e:	0e 94 27 01 	call	0x24e	; 0x24e <oled_reset>
		oled_print_mario_large(i,j);
 392:	be 01       	movw	r22, r28
 394:	84 e0       	ldi	r24, 0x04	; 4
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 53 01 	call	0x2a6	; 0x2a6 <oled_print_mario_large>
 39c:	2f e9       	ldi	r18, 0x9F	; 159
 39e:	86 e8       	ldi	r24, 0x86	; 134
 3a0:	91 e0       	ldi	r25, 0x01	; 1
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <oled_animate_mario_large+0x4c>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <oled_animate_mario_large+0x56>
 3ac:	00 00       	nop
		oled_print_mario_large(i,0);
		_delay_ms(1000);
		oled_reset();
	}
	i--;
	for (j = 0; j < 96; j = j+3)
 3ae:	23 96       	adiw	r28, 0x03	; 3
 3b0:	c0 36       	cpi	r28, 0x60	; 96
 3b2:	d1 05       	cpc	r29, r1
 3b4:	61 f7       	brne	.-40     	; 0x38e <oled_animate_mario_large+0x38>
		oled_reset();
		oled_print_mario_large(i,j);
		_delay_ms(500);
		
	}	
}
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	08 95       	ret

000003bc <oled_test>:
	oled_print_special_char(25);
}

void oled_test(){

	oled_reset();
 3bc:	0e 94 27 01 	call	0x24e	; 0x24e <oled_reset>
	
	//oled_goto_line(4);
	//oled_goto_column(39);

	//oled_print_arrow(2, 64);
	oled_animate_mario_large();
 3c0:	0e 94 ab 01 	call	0x356	; 0x356 <oled_animate_mario_large>
 3c4:	08 95       	ret

000003c6 <SRAM_init>:
 3c6:	85 b7       	in	r24, 0x35	; 53
 3c8:	80 68       	ori	r24, 0x80	; 128
 3ca:	85 bf       	out	0x35, r24	; 53
 3cc:	80 b7       	in	r24, 0x30	; 48
 3ce:	80 62       	ori	r24, 0x20	; 32
 3d0:	80 bf       	out	0x30, r24	; 48
 3d2:	08 95       	ret

000003d4 <USART_Transmit>:
 3d4:	5d 9b       	sbis	0x0b, 5	; 11
 3d6:	fe cf       	rjmp	.-4      	; 0x3d4 <USART_Transmit>
 3d8:	8c b9       	out	0x0c, r24	; 12
 3da:	08 95       	ret

000003dc <USART_Receive>:
 3dc:	5f 9b       	sbis	0x0b, 7	; 11
 3de:	fe cf       	rjmp	.-4      	; 0x3dc <USART_Receive>
 3e0:	8c b1       	in	r24, 0x0c	; 12
 3e2:	08 95       	ret

000003e4 <USART_Init>:
 3e4:	90 bd       	out	0x20, r25	; 32
 3e6:	89 b9       	out	0x09, r24	; 9
 3e8:	88 e1       	ldi	r24, 0x18	; 24
 3ea:	8a b9       	out	0x0a, r24	; 10
 3ec:	8e e8       	ldi	r24, 0x8E	; 142
 3ee:	80 bd       	out	0x20, r24	; 32
 3f0:	6e ee       	ldi	r22, 0xEE	; 238
 3f2:	71 e0       	ldi	r23, 0x01	; 1
 3f4:	8a ee       	ldi	r24, 0xEA	; 234
 3f6:	91 e0       	ldi	r25, 0x01	; 1
 3f8:	0e 94 26 03 	call	0x64c	; 0x64c <fdevopen>
 3fc:	08 95       	ret

000003fe <malloc>:
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	82 30       	cpi	r24, 0x02	; 2
 404:	91 05       	cpc	r25, r1
 406:	10 f4       	brcc	.+4      	; 0x40c <malloc+0xe>
 408:	82 e0       	ldi	r24, 0x02	; 2
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	e0 91 0c 01 	lds	r30, 0x010C
 410:	f0 91 0d 01 	lds	r31, 0x010D
 414:	20 e0       	ldi	r18, 0x00	; 0
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	a0 e0       	ldi	r26, 0x00	; 0
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	30 97       	sbiw	r30, 0x00	; 0
 41e:	39 f1       	breq	.+78     	; 0x46e <malloc+0x70>
 420:	40 81       	ld	r20, Z
 422:	51 81       	ldd	r21, Z+1	; 0x01
 424:	48 17       	cp	r20, r24
 426:	59 07       	cpc	r21, r25
 428:	b8 f0       	brcs	.+46     	; 0x458 <malloc+0x5a>
 42a:	48 17       	cp	r20, r24
 42c:	59 07       	cpc	r21, r25
 42e:	71 f4       	brne	.+28     	; 0x44c <malloc+0x4e>
 430:	82 81       	ldd	r24, Z+2	; 0x02
 432:	93 81       	ldd	r25, Z+3	; 0x03
 434:	10 97       	sbiw	r26, 0x00	; 0
 436:	29 f0       	breq	.+10     	; 0x442 <malloc+0x44>
 438:	13 96       	adiw	r26, 0x03	; 3
 43a:	9c 93       	st	X, r25
 43c:	8e 93       	st	-X, r24
 43e:	12 97       	sbiw	r26, 0x02	; 2
 440:	2c c0       	rjmp	.+88     	; 0x49a <malloc+0x9c>
 442:	90 93 0d 01 	sts	0x010D, r25
 446:	80 93 0c 01 	sts	0x010C, r24
 44a:	27 c0       	rjmp	.+78     	; 0x49a <malloc+0x9c>
 44c:	21 15       	cp	r18, r1
 44e:	31 05       	cpc	r19, r1
 450:	31 f0       	breq	.+12     	; 0x45e <malloc+0x60>
 452:	42 17       	cp	r20, r18
 454:	53 07       	cpc	r21, r19
 456:	18 f0       	brcs	.+6      	; 0x45e <malloc+0x60>
 458:	a9 01       	movw	r20, r18
 45a:	db 01       	movw	r26, r22
 45c:	01 c0       	rjmp	.+2      	; 0x460 <malloc+0x62>
 45e:	ef 01       	movw	r28, r30
 460:	9a 01       	movw	r18, r20
 462:	bd 01       	movw	r22, r26
 464:	df 01       	movw	r26, r30
 466:	02 80       	ldd	r0, Z+2	; 0x02
 468:	f3 81       	ldd	r31, Z+3	; 0x03
 46a:	e0 2d       	mov	r30, r0
 46c:	d7 cf       	rjmp	.-82     	; 0x41c <malloc+0x1e>
 46e:	21 15       	cp	r18, r1
 470:	31 05       	cpc	r19, r1
 472:	f9 f0       	breq	.+62     	; 0x4b2 <malloc+0xb4>
 474:	28 1b       	sub	r18, r24
 476:	39 0b       	sbc	r19, r25
 478:	24 30       	cpi	r18, 0x04	; 4
 47a:	31 05       	cpc	r19, r1
 47c:	80 f4       	brcc	.+32     	; 0x49e <malloc+0xa0>
 47e:	8a 81       	ldd	r24, Y+2	; 0x02
 480:	9b 81       	ldd	r25, Y+3	; 0x03
 482:	61 15       	cp	r22, r1
 484:	71 05       	cpc	r23, r1
 486:	21 f0       	breq	.+8      	; 0x490 <malloc+0x92>
 488:	fb 01       	movw	r30, r22
 48a:	93 83       	std	Z+3, r25	; 0x03
 48c:	82 83       	std	Z+2, r24	; 0x02
 48e:	04 c0       	rjmp	.+8      	; 0x498 <malloc+0x9a>
 490:	90 93 0d 01 	sts	0x010D, r25
 494:	80 93 0c 01 	sts	0x010C, r24
 498:	fe 01       	movw	r30, r28
 49a:	32 96       	adiw	r30, 0x02	; 2
 49c:	44 c0       	rjmp	.+136    	; 0x526 <__stack+0x27>
 49e:	fe 01       	movw	r30, r28
 4a0:	e2 0f       	add	r30, r18
 4a2:	f3 1f       	adc	r31, r19
 4a4:	81 93       	st	Z+, r24
 4a6:	91 93       	st	Z+, r25
 4a8:	22 50       	subi	r18, 0x02	; 2
 4aa:	31 09       	sbc	r19, r1
 4ac:	39 83       	std	Y+1, r19	; 0x01
 4ae:	28 83       	st	Y, r18
 4b0:	3a c0       	rjmp	.+116    	; 0x526 <__stack+0x27>
 4b2:	20 91 0a 01 	lds	r18, 0x010A
 4b6:	30 91 0b 01 	lds	r19, 0x010B
 4ba:	23 2b       	or	r18, r19
 4bc:	41 f4       	brne	.+16     	; 0x4ce <malloc+0xd0>
 4be:	20 91 02 01 	lds	r18, 0x0102
 4c2:	30 91 03 01 	lds	r19, 0x0103
 4c6:	30 93 0b 01 	sts	0x010B, r19
 4ca:	20 93 0a 01 	sts	0x010A, r18
 4ce:	20 91 00 01 	lds	r18, 0x0100
 4d2:	30 91 01 01 	lds	r19, 0x0101
 4d6:	21 15       	cp	r18, r1
 4d8:	31 05       	cpc	r19, r1
 4da:	41 f4       	brne	.+16     	; 0x4ec <malloc+0xee>
 4dc:	2d b7       	in	r18, 0x3d	; 61
 4de:	3e b7       	in	r19, 0x3e	; 62
 4e0:	40 91 04 01 	lds	r20, 0x0104
 4e4:	50 91 05 01 	lds	r21, 0x0105
 4e8:	24 1b       	sub	r18, r20
 4ea:	35 0b       	sbc	r19, r21
 4ec:	e0 91 0a 01 	lds	r30, 0x010A
 4f0:	f0 91 0b 01 	lds	r31, 0x010B
 4f4:	e2 17       	cp	r30, r18
 4f6:	f3 07       	cpc	r31, r19
 4f8:	a0 f4       	brcc	.+40     	; 0x522 <__stack+0x23>
 4fa:	2e 1b       	sub	r18, r30
 4fc:	3f 0b       	sbc	r19, r31
 4fe:	28 17       	cp	r18, r24
 500:	39 07       	cpc	r19, r25
 502:	78 f0       	brcs	.+30     	; 0x522 <__stack+0x23>
 504:	ac 01       	movw	r20, r24
 506:	4e 5f       	subi	r20, 0xFE	; 254
 508:	5f 4f       	sbci	r21, 0xFF	; 255
 50a:	24 17       	cp	r18, r20
 50c:	35 07       	cpc	r19, r21
 50e:	48 f0       	brcs	.+18     	; 0x522 <__stack+0x23>
 510:	4e 0f       	add	r20, r30
 512:	5f 1f       	adc	r21, r31
 514:	50 93 0b 01 	sts	0x010B, r21
 518:	40 93 0a 01 	sts	0x010A, r20
 51c:	81 93       	st	Z+, r24
 51e:	91 93       	st	Z+, r25
 520:	02 c0       	rjmp	.+4      	; 0x526 <__stack+0x27>
 522:	e0 e0       	ldi	r30, 0x00	; 0
 524:	f0 e0       	ldi	r31, 0x00	; 0
 526:	cf 01       	movw	r24, r30
 528:	df 91       	pop	r29
 52a:	cf 91       	pop	r28
 52c:	08 95       	ret

0000052e <free>:
 52e:	cf 93       	push	r28
 530:	df 93       	push	r29
 532:	00 97       	sbiw	r24, 0x00	; 0
 534:	09 f4       	brne	.+2      	; 0x538 <free+0xa>
 536:	87 c0       	rjmp	.+270    	; 0x646 <free+0x118>
 538:	fc 01       	movw	r30, r24
 53a:	32 97       	sbiw	r30, 0x02	; 2
 53c:	13 82       	std	Z+3, r1	; 0x03
 53e:	12 82       	std	Z+2, r1	; 0x02
 540:	c0 91 0c 01 	lds	r28, 0x010C
 544:	d0 91 0d 01 	lds	r29, 0x010D
 548:	20 97       	sbiw	r28, 0x00	; 0
 54a:	81 f4       	brne	.+32     	; 0x56c <free+0x3e>
 54c:	20 81       	ld	r18, Z
 54e:	31 81       	ldd	r19, Z+1	; 0x01
 550:	28 0f       	add	r18, r24
 552:	39 1f       	adc	r19, r25
 554:	80 91 0a 01 	lds	r24, 0x010A
 558:	90 91 0b 01 	lds	r25, 0x010B
 55c:	82 17       	cp	r24, r18
 55e:	93 07       	cpc	r25, r19
 560:	79 f5       	brne	.+94     	; 0x5c0 <free+0x92>
 562:	f0 93 0b 01 	sts	0x010B, r31
 566:	e0 93 0a 01 	sts	0x010A, r30
 56a:	6d c0       	rjmp	.+218    	; 0x646 <free+0x118>
 56c:	de 01       	movw	r26, r28
 56e:	20 e0       	ldi	r18, 0x00	; 0
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	ae 17       	cp	r26, r30
 574:	bf 07       	cpc	r27, r31
 576:	50 f4       	brcc	.+20     	; 0x58c <free+0x5e>
 578:	12 96       	adiw	r26, 0x02	; 2
 57a:	4d 91       	ld	r20, X+
 57c:	5c 91       	ld	r21, X
 57e:	13 97       	sbiw	r26, 0x03	; 3
 580:	9d 01       	movw	r18, r26
 582:	41 15       	cp	r20, r1
 584:	51 05       	cpc	r21, r1
 586:	09 f1       	breq	.+66     	; 0x5ca <free+0x9c>
 588:	da 01       	movw	r26, r20
 58a:	f3 cf       	rjmp	.-26     	; 0x572 <free+0x44>
 58c:	b3 83       	std	Z+3, r27	; 0x03
 58e:	a2 83       	std	Z+2, r26	; 0x02
 590:	40 81       	ld	r20, Z
 592:	51 81       	ldd	r21, Z+1	; 0x01
 594:	84 0f       	add	r24, r20
 596:	95 1f       	adc	r25, r21
 598:	8a 17       	cp	r24, r26
 59a:	9b 07       	cpc	r25, r27
 59c:	71 f4       	brne	.+28     	; 0x5ba <free+0x8c>
 59e:	8d 91       	ld	r24, X+
 5a0:	9c 91       	ld	r25, X
 5a2:	11 97       	sbiw	r26, 0x01	; 1
 5a4:	84 0f       	add	r24, r20
 5a6:	95 1f       	adc	r25, r21
 5a8:	02 96       	adiw	r24, 0x02	; 2
 5aa:	91 83       	std	Z+1, r25	; 0x01
 5ac:	80 83       	st	Z, r24
 5ae:	12 96       	adiw	r26, 0x02	; 2
 5b0:	8d 91       	ld	r24, X+
 5b2:	9c 91       	ld	r25, X
 5b4:	13 97       	sbiw	r26, 0x03	; 3
 5b6:	93 83       	std	Z+3, r25	; 0x03
 5b8:	82 83       	std	Z+2, r24	; 0x02
 5ba:	21 15       	cp	r18, r1
 5bc:	31 05       	cpc	r19, r1
 5be:	29 f4       	brne	.+10     	; 0x5ca <free+0x9c>
 5c0:	f0 93 0d 01 	sts	0x010D, r31
 5c4:	e0 93 0c 01 	sts	0x010C, r30
 5c8:	3e c0       	rjmp	.+124    	; 0x646 <free+0x118>
 5ca:	d9 01       	movw	r26, r18
 5cc:	13 96       	adiw	r26, 0x03	; 3
 5ce:	fc 93       	st	X, r31
 5d0:	ee 93       	st	-X, r30
 5d2:	12 97       	sbiw	r26, 0x02	; 2
 5d4:	4d 91       	ld	r20, X+
 5d6:	5d 91       	ld	r21, X+
 5d8:	a4 0f       	add	r26, r20
 5da:	b5 1f       	adc	r27, r21
 5dc:	ea 17       	cp	r30, r26
 5de:	fb 07       	cpc	r31, r27
 5e0:	79 f4       	brne	.+30     	; 0x600 <free+0xd2>
 5e2:	80 81       	ld	r24, Z
 5e4:	91 81       	ldd	r25, Z+1	; 0x01
 5e6:	84 0f       	add	r24, r20
 5e8:	95 1f       	adc	r25, r21
 5ea:	02 96       	adiw	r24, 0x02	; 2
 5ec:	d9 01       	movw	r26, r18
 5ee:	11 96       	adiw	r26, 0x01	; 1
 5f0:	9c 93       	st	X, r25
 5f2:	8e 93       	st	-X, r24
 5f4:	82 81       	ldd	r24, Z+2	; 0x02
 5f6:	93 81       	ldd	r25, Z+3	; 0x03
 5f8:	13 96       	adiw	r26, 0x03	; 3
 5fa:	9c 93       	st	X, r25
 5fc:	8e 93       	st	-X, r24
 5fe:	12 97       	sbiw	r26, 0x02	; 2
 600:	e0 e0       	ldi	r30, 0x00	; 0
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	8a 81       	ldd	r24, Y+2	; 0x02
 606:	9b 81       	ldd	r25, Y+3	; 0x03
 608:	00 97       	sbiw	r24, 0x00	; 0
 60a:	19 f0       	breq	.+6      	; 0x612 <free+0xe4>
 60c:	fe 01       	movw	r30, r28
 60e:	ec 01       	movw	r28, r24
 610:	f9 cf       	rjmp	.-14     	; 0x604 <free+0xd6>
 612:	ce 01       	movw	r24, r28
 614:	02 96       	adiw	r24, 0x02	; 2
 616:	28 81       	ld	r18, Y
 618:	39 81       	ldd	r19, Y+1	; 0x01
 61a:	82 0f       	add	r24, r18
 61c:	93 1f       	adc	r25, r19
 61e:	20 91 0a 01 	lds	r18, 0x010A
 622:	30 91 0b 01 	lds	r19, 0x010B
 626:	28 17       	cp	r18, r24
 628:	39 07       	cpc	r19, r25
 62a:	69 f4       	brne	.+26     	; 0x646 <free+0x118>
 62c:	30 97       	sbiw	r30, 0x00	; 0
 62e:	29 f4       	brne	.+10     	; 0x63a <free+0x10c>
 630:	10 92 0d 01 	sts	0x010D, r1
 634:	10 92 0c 01 	sts	0x010C, r1
 638:	02 c0       	rjmp	.+4      	; 0x63e <free+0x110>
 63a:	13 82       	std	Z+3, r1	; 0x03
 63c:	12 82       	std	Z+2, r1	; 0x02
 63e:	d0 93 0b 01 	sts	0x010B, r29
 642:	c0 93 0a 01 	sts	0x010A, r28
 646:	df 91       	pop	r29
 648:	cf 91       	pop	r28
 64a:	08 95       	ret

0000064c <fdevopen>:
 64c:	0f 93       	push	r16
 64e:	1f 93       	push	r17
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	ec 01       	movw	r28, r24
 656:	8b 01       	movw	r16, r22
 658:	00 97       	sbiw	r24, 0x00	; 0
 65a:	31 f4       	brne	.+12     	; 0x668 <fdevopen+0x1c>
 65c:	61 15       	cp	r22, r1
 65e:	71 05       	cpc	r23, r1
 660:	19 f4       	brne	.+6      	; 0x668 <fdevopen+0x1c>
 662:	80 e0       	ldi	r24, 0x00	; 0
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	38 c0       	rjmp	.+112    	; 0x6d8 <fdevopen+0x8c>
 668:	6e e0       	ldi	r22, 0x0E	; 14
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	81 e0       	ldi	r24, 0x01	; 1
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 94 71 03 	call	0x6e2	; 0x6e2 <calloc>
 674:	fc 01       	movw	r30, r24
 676:	00 97       	sbiw	r24, 0x00	; 0
 678:	a1 f3       	breq	.-24     	; 0x662 <fdevopen+0x16>
 67a:	80 e8       	ldi	r24, 0x80	; 128
 67c:	83 83       	std	Z+3, r24	; 0x03
 67e:	01 15       	cp	r16, r1
 680:	11 05       	cpc	r17, r1
 682:	71 f0       	breq	.+28     	; 0x6a0 <fdevopen+0x54>
 684:	13 87       	std	Z+11, r17	; 0x0b
 686:	02 87       	std	Z+10, r16	; 0x0a
 688:	81 e8       	ldi	r24, 0x81	; 129
 68a:	83 83       	std	Z+3, r24	; 0x03
 68c:	80 91 0e 01 	lds	r24, 0x010E
 690:	90 91 0f 01 	lds	r25, 0x010F
 694:	89 2b       	or	r24, r25
 696:	21 f4       	brne	.+8      	; 0x6a0 <fdevopen+0x54>
 698:	f0 93 0f 01 	sts	0x010F, r31
 69c:	e0 93 0e 01 	sts	0x010E, r30
 6a0:	20 97       	sbiw	r28, 0x00	; 0
 6a2:	c9 f0       	breq	.+50     	; 0x6d6 <fdevopen+0x8a>
 6a4:	d1 87       	std	Z+9, r29	; 0x09
 6a6:	c0 87       	std	Z+8, r28	; 0x08
 6a8:	83 81       	ldd	r24, Z+3	; 0x03
 6aa:	82 60       	ori	r24, 0x02	; 2
 6ac:	83 83       	std	Z+3, r24	; 0x03
 6ae:	80 91 10 01 	lds	r24, 0x0110
 6b2:	90 91 11 01 	lds	r25, 0x0111
 6b6:	89 2b       	or	r24, r25
 6b8:	71 f4       	brne	.+28     	; 0x6d6 <fdevopen+0x8a>
 6ba:	f0 93 11 01 	sts	0x0111, r31
 6be:	e0 93 10 01 	sts	0x0110, r30
 6c2:	80 91 12 01 	lds	r24, 0x0112
 6c6:	90 91 13 01 	lds	r25, 0x0113
 6ca:	89 2b       	or	r24, r25
 6cc:	21 f4       	brne	.+8      	; 0x6d6 <fdevopen+0x8a>
 6ce:	f0 93 13 01 	sts	0x0113, r31
 6d2:	e0 93 12 01 	sts	0x0112, r30
 6d6:	cf 01       	movw	r24, r30
 6d8:	df 91       	pop	r29
 6da:	cf 91       	pop	r28
 6dc:	1f 91       	pop	r17
 6de:	0f 91       	pop	r16
 6e0:	08 95       	ret

000006e2 <calloc>:
 6e2:	0f 93       	push	r16
 6e4:	1f 93       	push	r17
 6e6:	cf 93       	push	r28
 6e8:	df 93       	push	r29
 6ea:	86 9f       	mul	r24, r22
 6ec:	80 01       	movw	r16, r0
 6ee:	87 9f       	mul	r24, r23
 6f0:	10 0d       	add	r17, r0
 6f2:	96 9f       	mul	r25, r22
 6f4:	10 0d       	add	r17, r0
 6f6:	11 24       	eor	r1, r1
 6f8:	c8 01       	movw	r24, r16
 6fa:	0e 94 ff 01 	call	0x3fe	; 0x3fe <malloc>
 6fe:	ec 01       	movw	r28, r24
 700:	00 97       	sbiw	r24, 0x00	; 0
 702:	29 f0       	breq	.+10     	; 0x70e <calloc+0x2c>
 704:	a8 01       	movw	r20, r16
 706:	60 e0       	ldi	r22, 0x00	; 0
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	0e 94 8d 03 	call	0x71a	; 0x71a <memset>
 70e:	ce 01       	movw	r24, r28
 710:	df 91       	pop	r29
 712:	cf 91       	pop	r28
 714:	1f 91       	pop	r17
 716:	0f 91       	pop	r16
 718:	08 95       	ret

0000071a <memset>:
 71a:	dc 01       	movw	r26, r24
 71c:	01 c0       	rjmp	.+2      	; 0x720 <memset+0x6>
 71e:	6d 93       	st	X+, r22
 720:	41 50       	subi	r20, 0x01	; 1
 722:	50 40       	sbci	r21, 0x00	; 0
 724:	e0 f7       	brcc	.-8      	; 0x71e <memset+0x4>
 726:	08 95       	ret

00000728 <_exit>:
 728:	f8 94       	cli

0000072a <__stop_program>:
 72a:	ff cf       	rjmp	.-2      	; 0x72a <__stop_program>
