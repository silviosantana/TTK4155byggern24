
byggern24.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000cac  00000d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bbc  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e3  00000000  00000000  00001b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b8  00000000  00000000  00002407  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  000029c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000491  00000000  00000000  00002b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003b1  00000000  00000000  00002fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000336e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ea       	ldi	r30, 0xAC	; 172
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 54 06 	jmp	0xca8	; 0xca8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
	_delay_ms(1000);                // wait 500 milliseconds
}

int main(void)
{
	USART_Init(MYUBRR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <USART_Init>
	DDRA = 0xFF;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	8a bb       	out	0x1a, r24	; 26
	while(1)
	{
		SRAM_test();
  ba:	0e 94 60 00 	call	0xc0	; 0xc0 <SRAM_test>
  be:	fd cf       	rjmp	.-6      	; 0xba <main+0xc>

000000c0 <SRAM_test>:
	volatile char *ext_ram = (char *) START_SRAM; // Start address for the SRAM
	return ext_ram[address];
}

void SRAM_test()
{
  c0:	cf 92       	push	r12
  c2:	df 92       	push	r13
  c4:	ef 92       	push	r14
  c6:	ff 92       	push	r15
  c8:	0f 93       	push	r16
  ca:	1f 93       	push	r17
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
	volatile char *ext_ram = (char *) START_SRAM; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  d0:	8a e0       	ldi	r24, 0x0A	; 10
  d2:	91 e0       	ldi	r25, 0x01	; 1
  d4:	0e 94 b5 01 	call	0x36a	; 0x36a <puts>
	
	// rand() stores some internal state, so calling this function in a loop will yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  d8:	0e 94 44 01 	call	0x288	; 0x288 <rand>
  dc:	7c 01       	movw	r14, r24
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  de:	0e 94 49 01 	call	0x292	; 0x292 <srand>
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  e2:	c1 2c       	mov	r12, r1
  e4:	d1 2c       	mov	r13, r1

void SRAM_test()
{
	volatile char *ext_ram = (char *) START_SRAM; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	10 e0       	ldi	r17, 0x00	; 0
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
  ea:	c0 e2       	ldi	r28, 0x20	; 32
  ec:	d1 e0       	ldi	r29, 0x01	; 1
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
  ee:	0e 94 44 01 	call	0x288	; 0x288 <rand>
  f2:	f6 01       	movw	r30, r12
  f4:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
  f6:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  f8:	20 81       	ld	r18, Z
		
		if (retreived_value != some_value) {
  fa:	28 17       	cp	r18, r24
  fc:	a9 f0       	breq	.+42     	; 0x128 <SRAM_test+0x68>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
  fe:	99 27       	eor	r25, r25
 100:	9f 93       	push	r25
 102:	8f 93       	push	r24
 104:	1f 92       	push	r1
 106:	2f 93       	push	r18
 108:	df 92       	push	r13
 10a:	cf 92       	push	r12
 10c:	df 93       	push	r29
 10e:	cf 93       	push	r28
 110:	0e 94 9f 01 	call	0x33e	; 0x33e <printf>
			write_errors++;
 114:	0f 5f       	subi	r16, 0xFF	; 255
 116:	1f 4f       	sbci	r17, 0xFF	; 255
 118:	8d b7       	in	r24, 0x3d	; 61
 11a:	9e b7       	in	r25, 0x3e	; 62
 11c:	08 96       	adiw	r24, 0x08	; 8
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	9e bf       	out	0x3e, r25	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	8d bf       	out	0x3d, r24	; 61
	uint16_t seed = rand();
	
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 128:	9f ef       	ldi	r25, 0xFF	; 255
 12a:	c9 1a       	sub	r12, r25
 12c:	d9 0a       	sbc	r13, r25
 12e:	c1 14       	cp	r12, r1
 130:	88 e0       	ldi	r24, 0x08	; 8
 132:	d8 06       	cpc	r13, r24
 134:	e1 f6       	brne	.-72     	; 0xee <SRAM_test+0x2e>
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	
	srand(seed);
 136:	c7 01       	movw	r24, r14
 138:	0e 94 49 01 	call	0x292	; 0x292 <srand>
	// reset the PRNG to the state it had before the write phase
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 13c:	c0 e0       	ldi	r28, 0x00	; 0
 13e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test()
{
	volatile char *ext_ram = (char *) START_SRAM; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 140:	e1 2c       	mov	r14, r1
 142:	f1 2c       	mov	r15, r1
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 144:	0f 2e       	mov	r0, r31
 146:	f9 e5       	ldi	r31, 0x59	; 89
 148:	cf 2e       	mov	r12, r31
 14a:	f1 e0       	ldi	r31, 0x01	; 1
 14c:	df 2e       	mov	r13, r31
 14e:	f0 2d       	mov	r31, r0
	
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 150:	0e 94 44 01 	call	0x288	; 0x288 <rand>
 154:	fe 01       	movw	r30, r28
 156:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 158:	20 81       	ld	r18, Z
		
		if (retreived_value != some_value) {
 15a:	28 17       	cp	r18, r24
 15c:	b1 f0       	breq	.+44     	; 0x18a <SRAM_test+0xca>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 15e:	99 27       	eor	r25, r25
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	1f 92       	push	r1
 166:	2f 93       	push	r18
 168:	df 93       	push	r29
 16a:	cf 93       	push	r28
 16c:	df 92       	push	r13
 16e:	cf 92       	push	r12
 170:	0e 94 9f 01 	call	0x33e	; 0x33e <printf>
			retrieval_errors++;
 174:	9f ef       	ldi	r25, 0xFF	; 255
 176:	e9 1a       	sub	r14, r25
 178:	f9 0a       	sbc	r15, r25
 17a:	8d b7       	in	r24, 0x3d	; 61
 17c:	9e b7       	in	r25, 0x3e	; 62
 17e:	08 96       	adiw	r24, 0x08	; 8
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	f8 94       	cli
 184:	9e bf       	out	0x3e, r25	; 62
 186:	0f be       	out	0x3f, r0	; 63
 188:	8d bf       	out	0x3d, r24	; 61
	// Retrieval phase: Check that no values were changed during or after the write phase
	
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 18a:	21 96       	adiw	r28, 0x01	; 1
 18c:	c1 15       	cp	r28, r1
 18e:	98 e0       	ldi	r25, 0x08	; 8
 190:	d9 07       	cpc	r29, r25
 192:	f1 f6       	brne	.-68     	; 0x150 <SRAM_test+0x90>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 194:	ff 92       	push	r15
 196:	ef 92       	push	r14
 198:	1f 93       	push	r17
 19a:	0f 93       	push	r16
 19c:	86 e9       	ldi	r24, 0x96	; 150
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	9f 93       	push	r25
 1a2:	8f 93       	push	r24
 1a4:	0e 94 9f 01 	call	0x33e	; 0x33e <printf>

 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	1f 91       	pop	r17
 1ba:	0f 91       	pop	r16
 1bc:	ff 90       	pop	r15
 1be:	ef 90       	pop	r14
 1c0:	df 90       	pop	r13
 1c2:	cf 90       	pop	r12
 1c4:	08 95       	ret

000001c6 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
 1c6:	5d 9b       	sbis	0x0b, 5	; 11
 1c8:	fe cf       	rjmp	.-4      	; 0x1c6 <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1ca:	8c b9       	out	0x0c, r24	; 12
 1cc:	08 95       	ret

000001ce <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 1ce:	5f 9b       	sbis	0x0b, 7	; 11
 1d0:	fe cf       	rjmp	.-4      	; 0x1ce <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 1d2:	8c b1       	in	r24, 0x0c	; 12
}
 1d4:	08 95       	ret

000001d6 <USART_Init>:
#include <avr/io.h>

void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (ubrr >> 8);
 1d6:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
 1d8:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 1da:	88 e1       	ldi	r24, 0x18	; 24
 1dc:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0)|(3 << UCSZ00);
 1de:	8e e8       	ldi	r24, 0x8E	; 142
 1e0:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_Transmit, USART_Receive);
 1e2:	67 ee       	ldi	r22, 0xE7	; 231
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	83 ee       	ldi	r24, 0xE3	; 227
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 54 01 	call	0x2a8	; 0x2a8 <fdevopen>
 1ee:	08 95       	ret

000001f0 <do_rand>:
 1f0:	8f 92       	push	r8
 1f2:	9f 92       	push	r9
 1f4:	af 92       	push	r10
 1f6:	bf 92       	push	r11
 1f8:	cf 92       	push	r12
 1fa:	df 92       	push	r13
 1fc:	ef 92       	push	r14
 1fe:	ff 92       	push	r15
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	ec 01       	movw	r28, r24
 206:	68 81       	ld	r22, Y
 208:	79 81       	ldd	r23, Y+1	; 0x01
 20a:	8a 81       	ldd	r24, Y+2	; 0x02
 20c:	9b 81       	ldd	r25, Y+3	; 0x03
 20e:	61 15       	cp	r22, r1
 210:	71 05       	cpc	r23, r1
 212:	81 05       	cpc	r24, r1
 214:	91 05       	cpc	r25, r1
 216:	21 f4       	brne	.+8      	; 0x220 <do_rand+0x30>
 218:	64 e2       	ldi	r22, 0x24	; 36
 21a:	79 ed       	ldi	r23, 0xD9	; 217
 21c:	8b e5       	ldi	r24, 0x5B	; 91
 21e:	97 e0       	ldi	r25, 0x07	; 7
 220:	2d e1       	ldi	r18, 0x1D	; 29
 222:	33 ef       	ldi	r19, 0xF3	; 243
 224:	41 e0       	ldi	r20, 0x01	; 1
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	0e 94 ba 05 	call	0xb74	; 0xb74 <__divmodsi4>
 22c:	49 01       	movw	r8, r18
 22e:	5a 01       	movw	r10, r20
 230:	9b 01       	movw	r18, r22
 232:	ac 01       	movw	r20, r24
 234:	a7 ea       	ldi	r26, 0xA7	; 167
 236:	b1 e4       	ldi	r27, 0x41	; 65
 238:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__muluhisi3>
 23c:	6b 01       	movw	r12, r22
 23e:	7c 01       	movw	r14, r24
 240:	ac ee       	ldi	r26, 0xEC	; 236
 242:	b4 ef       	ldi	r27, 0xF4	; 244
 244:	a5 01       	movw	r20, r10
 246:	94 01       	movw	r18, r8
 248:	0e 94 e7 05 	call	0xbce	; 0xbce <__mulohisi3>
 24c:	dc 01       	movw	r26, r24
 24e:	cb 01       	movw	r24, r22
 250:	8c 0d       	add	r24, r12
 252:	9d 1d       	adc	r25, r13
 254:	ae 1d       	adc	r26, r14
 256:	bf 1d       	adc	r27, r15
 258:	b7 ff       	sbrs	r27, 7
 25a:	03 c0       	rjmp	.+6      	; 0x262 <do_rand+0x72>
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	a1 09       	sbc	r26, r1
 260:	b0 48       	sbci	r27, 0x80	; 128
 262:	88 83       	st	Y, r24
 264:	99 83       	std	Y+1, r25	; 0x01
 266:	aa 83       	std	Y+2, r26	; 0x02
 268:	bb 83       	std	Y+3, r27	; 0x03
 26a:	9f 77       	andi	r25, 0x7F	; 127
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	ff 90       	pop	r15
 272:	ef 90       	pop	r14
 274:	df 90       	pop	r13
 276:	cf 90       	pop	r12
 278:	bf 90       	pop	r11
 27a:	af 90       	pop	r10
 27c:	9f 90       	pop	r9
 27e:	8f 90       	pop	r8
 280:	08 95       	ret

00000282 <rand_r>:
 282:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <do_rand>
 286:	08 95       	ret

00000288 <rand>:
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <do_rand>
 290:	08 95       	ret

00000292 <srand>:
 292:	a0 e0       	ldi	r26, 0x00	; 0
 294:	b0 e0       	ldi	r27, 0x00	; 0
 296:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 29a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 29e:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 2a2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 2a6:	08 95       	ret

000002a8 <fdevopen>:
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	00 97       	sbiw	r24, 0x00	; 0
 2b2:	31 f4       	brne	.+12     	; 0x2c0 <fdevopen+0x18>
 2b4:	61 15       	cp	r22, r1
 2b6:	71 05       	cpc	r23, r1
 2b8:	19 f4       	brne	.+6      	; 0x2c0 <fdevopen+0x18>
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	3a c0       	rjmp	.+116    	; 0x334 <fdevopen+0x8c>
 2c0:	8b 01       	movw	r16, r22
 2c2:	ec 01       	movw	r28, r24
 2c4:	6e e0       	ldi	r22, 0x0E	; 14
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 c6 03 	call	0x78c	; 0x78c <calloc>
 2d0:	fc 01       	movw	r30, r24
 2d2:	89 2b       	or	r24, r25
 2d4:	91 f3       	breq	.-28     	; 0x2ba <fdevopen+0x12>
 2d6:	80 e8       	ldi	r24, 0x80	; 128
 2d8:	83 83       	std	Z+3, r24	; 0x03
 2da:	01 15       	cp	r16, r1
 2dc:	11 05       	cpc	r17, r1
 2de:	71 f0       	breq	.+28     	; 0x2fc <fdevopen+0x54>
 2e0:	13 87       	std	Z+11, r17	; 0x0b
 2e2:	02 87       	std	Z+10, r16	; 0x0a
 2e4:	81 e8       	ldi	r24, 0x81	; 129
 2e6:	83 83       	std	Z+3, r24	; 0x03
 2e8:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <__data_end>
 2ec:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <__data_end+0x1>
 2f0:	89 2b       	or	r24, r25
 2f2:	21 f4       	brne	.+8      	; 0x2fc <fdevopen+0x54>
 2f4:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__data_end+0x1>
 2f8:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__data_end>
 2fc:	20 97       	sbiw	r28, 0x00	; 0
 2fe:	c9 f0       	breq	.+50     	; 0x332 <fdevopen+0x8a>
 300:	d1 87       	std	Z+9, r29	; 0x09
 302:	c0 87       	std	Z+8, r28	; 0x08
 304:	83 81       	ldd	r24, Z+3	; 0x03
 306:	82 60       	ori	r24, 0x02	; 2
 308:	83 83       	std	Z+3, r24	; 0x03
 30a:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 30e:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 312:	89 2b       	or	r24, r25
 314:	71 f4       	brne	.+28     	; 0x332 <fdevopen+0x8a>
 316:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__data_end+0x3>
 31a:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__data_end+0x2>
 31e:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <__data_end+0x4>
 322:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <__data_end+0x5>
 326:	89 2b       	or	r24, r25
 328:	21 f4       	brne	.+8      	; 0x332 <fdevopen+0x8a>
 32a:	f0 93 f5 01 	sts	0x01F5, r31	; 0x8001f5 <__data_end+0x5>
 32e:	e0 93 f4 01 	sts	0x01F4, r30	; 0x8001f4 <__data_end+0x4>
 332:	cf 01       	movw	r24, r30
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	1f 91       	pop	r17
 33a:	0f 91       	pop	r16
 33c:	08 95       	ret

0000033e <printf>:
 33e:	a0 e0       	ldi	r26, 0x00	; 0
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	e5 ea       	ldi	r30, 0xA5	; 165
 344:	f1 e0       	ldi	r31, 0x01	; 1
 346:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__prologue_saves__+0x20>
 34a:	ae 01       	movw	r20, r28
 34c:	4b 5f       	subi	r20, 0xFB	; 251
 34e:	5f 4f       	sbci	r21, 0xFF	; 255
 350:	fa 01       	movw	r30, r20
 352:	61 91       	ld	r22, Z+
 354:	71 91       	ld	r23, Z+
 356:	af 01       	movw	r20, r30
 358:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end+0x2>
 35c:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__data_end+0x3>
 360:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vfprintf>
 364:	e2 e0       	ldi	r30, 0x02	; 2
 366:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__epilogue_restores__+0x20>

0000036a <puts>:
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__data_end+0x2>
 376:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__data_end+0x3>
 37a:	23 81       	ldd	r18, Z+3	; 0x03
 37c:	21 ff       	sbrs	r18, 1
 37e:	1b c0       	rjmp	.+54     	; 0x3b6 <puts+0x4c>
 380:	8c 01       	movw	r16, r24
 382:	d0 e0       	ldi	r29, 0x00	; 0
 384:	c0 e0       	ldi	r28, 0x00	; 0
 386:	f8 01       	movw	r30, r16
 388:	81 91       	ld	r24, Z+
 38a:	8f 01       	movw	r16, r30
 38c:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <__data_end+0x2>
 390:	70 91 f3 01 	lds	r23, 0x01F3	; 0x8001f3 <__data_end+0x3>
 394:	db 01       	movw	r26, r22
 396:	18 96       	adiw	r26, 0x08	; 8
 398:	ed 91       	ld	r30, X+
 39a:	fc 91       	ld	r31, X
 39c:	19 97       	sbiw	r26, 0x09	; 9
 39e:	88 23       	and	r24, r24
 3a0:	31 f0       	breq	.+12     	; 0x3ae <puts+0x44>
 3a2:	09 95       	icall
 3a4:	89 2b       	or	r24, r25
 3a6:	79 f3       	breq	.-34     	; 0x386 <puts+0x1c>
 3a8:	df ef       	ldi	r29, 0xFF	; 255
 3aa:	cf ef       	ldi	r28, 0xFF	; 255
 3ac:	ec cf       	rjmp	.-40     	; 0x386 <puts+0x1c>
 3ae:	8a e0       	ldi	r24, 0x0A	; 10
 3b0:	09 95       	icall
 3b2:	89 2b       	or	r24, r25
 3b4:	19 f0       	breq	.+6      	; 0x3bc <puts+0x52>
 3b6:	8f ef       	ldi	r24, 0xFF	; 255
 3b8:	9f ef       	ldi	r25, 0xFF	; 255
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <puts+0x56>
 3bc:	8d 2f       	mov	r24, r29
 3be:	9c 2f       	mov	r25, r28
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	1f 91       	pop	r17
 3c6:	0f 91       	pop	r16
 3c8:	08 95       	ret

000003ca <vfprintf>:
 3ca:	ab e0       	ldi	r26, 0x0B	; 11
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb ee       	ldi	r30, 0xEB	; 235
 3d0:	f1 e0       	ldi	r31, 0x01	; 1
 3d2:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__prologue_saves__>
 3d6:	6c 01       	movw	r12, r24
 3d8:	7b 01       	movw	r14, r22
 3da:	8a 01       	movw	r16, r20
 3dc:	fc 01       	movw	r30, r24
 3de:	17 82       	std	Z+7, r1	; 0x07
 3e0:	16 82       	std	Z+6, r1	; 0x06
 3e2:	83 81       	ldd	r24, Z+3	; 0x03
 3e4:	81 ff       	sbrs	r24, 1
 3e6:	cc c1       	rjmp	.+920    	; 0x780 <__stack+0x281>
 3e8:	ce 01       	movw	r24, r28
 3ea:	01 96       	adiw	r24, 0x01	; 1
 3ec:	3c 01       	movw	r6, r24
 3ee:	f6 01       	movw	r30, r12
 3f0:	93 81       	ldd	r25, Z+3	; 0x03
 3f2:	f7 01       	movw	r30, r14
 3f4:	93 fd       	sbrc	r25, 3
 3f6:	85 91       	lpm	r24, Z+
 3f8:	93 ff       	sbrs	r25, 3
 3fa:	81 91       	ld	r24, Z+
 3fc:	7f 01       	movw	r14, r30
 3fe:	88 23       	and	r24, r24
 400:	09 f4       	brne	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	ba c1       	rjmp	.+884    	; 0x778 <__stack+0x279>
 404:	85 32       	cpi	r24, 0x25	; 37
 406:	39 f4       	brne	.+14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	7f 01       	movw	r14, r30
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	29 f4       	brne	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 416:	b6 01       	movw	r22, r12
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 41e:	e7 cf       	rjmp	.-50     	; 0x3ee <vfprintf+0x24>
 420:	91 2c       	mov	r9, r1
 422:	21 2c       	mov	r2, r1
 424:	31 2c       	mov	r3, r1
 426:	ff e1       	ldi	r31, 0x1F	; 31
 428:	f3 15       	cp	r31, r3
 42a:	d8 f0       	brcs	.+54     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 42c:	8b 32       	cpi	r24, 0x2B	; 43
 42e:	79 f0       	breq	.+30     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 430:	38 f4       	brcc	.+14     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 432:	80 32       	cpi	r24, 0x20	; 32
 434:	79 f0       	breq	.+30     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 436:	83 32       	cpi	r24, 0x23	; 35
 438:	a1 f4       	brne	.+40     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 43a:	23 2d       	mov	r18, r3
 43c:	20 61       	ori	r18, 0x10	; 16
 43e:	1d c0       	rjmp	.+58     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 440:	8d 32       	cpi	r24, 0x2D	; 45
 442:	61 f0       	breq	.+24     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 444:	80 33       	cpi	r24, 0x30	; 48
 446:	69 f4       	brne	.+26     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 448:	23 2d       	mov	r18, r3
 44a:	21 60       	ori	r18, 0x01	; 1
 44c:	16 c0       	rjmp	.+44     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 44e:	83 2d       	mov	r24, r3
 450:	82 60       	ori	r24, 0x02	; 2
 452:	38 2e       	mov	r3, r24
 454:	e3 2d       	mov	r30, r3
 456:	e4 60       	ori	r30, 0x04	; 4
 458:	3e 2e       	mov	r3, r30
 45a:	2a c0       	rjmp	.+84     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 45c:	f3 2d       	mov	r31, r3
 45e:	f8 60       	ori	r31, 0x08	; 8
 460:	1d c0       	rjmp	.+58     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 462:	37 fc       	sbrc	r3, 7
 464:	2d c0       	rjmp	.+90     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 466:	20 ed       	ldi	r18, 0xD0	; 208
 468:	28 0f       	add	r18, r24
 46a:	2a 30       	cpi	r18, 0x0A	; 10
 46c:	40 f0       	brcs	.+16     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 46e:	8e 32       	cpi	r24, 0x2E	; 46
 470:	b9 f4       	brne	.+46     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 472:	36 fc       	sbrc	r3, 6
 474:	81 c1       	rjmp	.+770    	; 0x778 <__stack+0x279>
 476:	23 2d       	mov	r18, r3
 478:	20 64       	ori	r18, 0x40	; 64
 47a:	32 2e       	mov	r3, r18
 47c:	19 c0       	rjmp	.+50     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 47e:	36 fe       	sbrs	r3, 6
 480:	06 c0       	rjmp	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 482:	8a e0       	ldi	r24, 0x0A	; 10
 484:	98 9e       	mul	r9, r24
 486:	20 0d       	add	r18, r0
 488:	11 24       	eor	r1, r1
 48a:	92 2e       	mov	r9, r18
 48c:	11 c0       	rjmp	.+34     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 48e:	ea e0       	ldi	r30, 0x0A	; 10
 490:	2e 9e       	mul	r2, r30
 492:	20 0d       	add	r18, r0
 494:	11 24       	eor	r1, r1
 496:	22 2e       	mov	r2, r18
 498:	f3 2d       	mov	r31, r3
 49a:	f0 62       	ori	r31, 0x20	; 32
 49c:	3f 2e       	mov	r3, r31
 49e:	08 c0       	rjmp	.+16     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a0:	8c 36       	cpi	r24, 0x6C	; 108
 4a2:	21 f4       	brne	.+8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a4:	83 2d       	mov	r24, r3
 4a6:	80 68       	ori	r24, 0x80	; 128
 4a8:	38 2e       	mov	r3, r24
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ac:	88 36       	cpi	r24, 0x68	; 104
 4ae:	41 f4       	brne	.+16     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b0:	f7 01       	movw	r30, r14
 4b2:	93 fd       	sbrc	r25, 3
 4b4:	85 91       	lpm	r24, Z+
 4b6:	93 ff       	sbrs	r25, 3
 4b8:	81 91       	ld	r24, Z+
 4ba:	7f 01       	movw	r14, r30
 4bc:	81 11       	cpse	r24, r1
 4be:	b3 cf       	rjmp	.-154    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 4c0:	98 2f       	mov	r25, r24
 4c2:	9f 7d       	andi	r25, 0xDF	; 223
 4c4:	95 54       	subi	r25, 0x45	; 69
 4c6:	93 30       	cpi	r25, 0x03	; 3
 4c8:	28 f4       	brcc	.+10     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ca:	0c 5f       	subi	r16, 0xFC	; 252
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	9f e3       	ldi	r25, 0x3F	; 63
 4d0:	99 83       	std	Y+1, r25	; 0x01
 4d2:	0d c0       	rjmp	.+26     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4d4:	83 36       	cpi	r24, 0x63	; 99
 4d6:	31 f0       	breq	.+12     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d8:	83 37       	cpi	r24, 0x73	; 115
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4dc:	83 35       	cpi	r24, 0x53	; 83
 4de:	09 f0       	breq	.+2      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4e0:	59 c0       	rjmp	.+178    	; 0x594 <__stack+0x95>
 4e2:	21 c0       	rjmp	.+66     	; 0x526 <__stack+0x27>
 4e4:	f8 01       	movw	r30, r16
 4e6:	80 81       	ld	r24, Z
 4e8:	89 83       	std	Y+1, r24	; 0x01
 4ea:	0e 5f       	subi	r16, 0xFE	; 254
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	88 24       	eor	r8, r8
 4f0:	83 94       	inc	r8
 4f2:	91 2c       	mov	r9, r1
 4f4:	53 01       	movw	r10, r6
 4f6:	13 c0       	rjmp	.+38     	; 0x51e <__stack+0x1f>
 4f8:	28 01       	movw	r4, r16
 4fa:	f2 e0       	ldi	r31, 0x02	; 2
 4fc:	4f 0e       	add	r4, r31
 4fe:	51 1c       	adc	r5, r1
 500:	f8 01       	movw	r30, r16
 502:	a0 80       	ld	r10, Z
 504:	b1 80       	ldd	r11, Z+1	; 0x01
 506:	36 fe       	sbrs	r3, 6
 508:	03 c0       	rjmp	.+6      	; 0x510 <__stack+0x11>
 50a:	69 2d       	mov	r22, r9
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__stack+0x15>
 510:	6f ef       	ldi	r22, 0xFF	; 255
 512:	7f ef       	ldi	r23, 0xFF	; 255
 514:	c5 01       	movw	r24, r10
 516:	0e 94 15 05 	call	0xa2a	; 0xa2a <strnlen>
 51a:	4c 01       	movw	r8, r24
 51c:	82 01       	movw	r16, r4
 51e:	f3 2d       	mov	r31, r3
 520:	ff 77       	andi	r31, 0x7F	; 127
 522:	3f 2e       	mov	r3, r31
 524:	16 c0       	rjmp	.+44     	; 0x552 <__stack+0x53>
 526:	28 01       	movw	r4, r16
 528:	22 e0       	ldi	r18, 0x02	; 2
 52a:	42 0e       	add	r4, r18
 52c:	51 1c       	adc	r5, r1
 52e:	f8 01       	movw	r30, r16
 530:	a0 80       	ld	r10, Z
 532:	b1 80       	ldd	r11, Z+1	; 0x01
 534:	36 fe       	sbrs	r3, 6
 536:	03 c0       	rjmp	.+6      	; 0x53e <__stack+0x3f>
 538:	69 2d       	mov	r22, r9
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__stack+0x43>
 53e:	6f ef       	ldi	r22, 0xFF	; 255
 540:	7f ef       	ldi	r23, 0xFF	; 255
 542:	c5 01       	movw	r24, r10
 544:	0e 94 03 05 	call	0xa06	; 0xa06 <strnlen_P>
 548:	4c 01       	movw	r8, r24
 54a:	f3 2d       	mov	r31, r3
 54c:	f0 68       	ori	r31, 0x80	; 128
 54e:	3f 2e       	mov	r3, r31
 550:	82 01       	movw	r16, r4
 552:	33 fc       	sbrc	r3, 3
 554:	1b c0       	rjmp	.+54     	; 0x58c <__stack+0x8d>
 556:	82 2d       	mov	r24, r2
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	88 16       	cp	r8, r24
 55c:	99 06       	cpc	r9, r25
 55e:	b0 f4       	brcc	.+44     	; 0x58c <__stack+0x8d>
 560:	b6 01       	movw	r22, r12
 562:	80 e2       	ldi	r24, 0x20	; 32
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 56a:	2a 94       	dec	r2
 56c:	f4 cf       	rjmp	.-24     	; 0x556 <__stack+0x57>
 56e:	f5 01       	movw	r30, r10
 570:	37 fc       	sbrc	r3, 7
 572:	85 91       	lpm	r24, Z+
 574:	37 fe       	sbrs	r3, 7
 576:	81 91       	ld	r24, Z+
 578:	5f 01       	movw	r10, r30
 57a:	b6 01       	movw	r22, r12
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 582:	21 10       	cpse	r2, r1
 584:	2a 94       	dec	r2
 586:	21 e0       	ldi	r18, 0x01	; 1
 588:	82 1a       	sub	r8, r18
 58a:	91 08       	sbc	r9, r1
 58c:	81 14       	cp	r8, r1
 58e:	91 04       	cpc	r9, r1
 590:	71 f7       	brne	.-36     	; 0x56e <__stack+0x6f>
 592:	e8 c0       	rjmp	.+464    	; 0x764 <__stack+0x265>
 594:	84 36       	cpi	r24, 0x64	; 100
 596:	11 f0       	breq	.+4      	; 0x59c <__stack+0x9d>
 598:	89 36       	cpi	r24, 0x69	; 105
 59a:	41 f5       	brne	.+80     	; 0x5ec <__stack+0xed>
 59c:	f8 01       	movw	r30, r16
 59e:	37 fe       	sbrs	r3, 7
 5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <__stack+0xb1>
 5a2:	60 81       	ld	r22, Z
 5a4:	71 81       	ldd	r23, Z+1	; 0x01
 5a6:	82 81       	ldd	r24, Z+2	; 0x02
 5a8:	93 81       	ldd	r25, Z+3	; 0x03
 5aa:	0c 5f       	subi	r16, 0xFC	; 252
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <__stack+0xc1>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	07 2e       	mov	r0, r23
 5b6:	00 0c       	add	r0, r0
 5b8:	88 0b       	sbc	r24, r24
 5ba:	99 0b       	sbc	r25, r25
 5bc:	0e 5f       	subi	r16, 0xFE	; 254
 5be:	1f 4f       	sbci	r17, 0xFF	; 255
 5c0:	f3 2d       	mov	r31, r3
 5c2:	ff 76       	andi	r31, 0x6F	; 111
 5c4:	3f 2e       	mov	r3, r31
 5c6:	97 ff       	sbrs	r25, 7
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__stack+0xdd>
 5ca:	90 95       	com	r25
 5cc:	80 95       	com	r24
 5ce:	70 95       	com	r23
 5d0:	61 95       	neg	r22
 5d2:	7f 4f       	sbci	r23, 0xFF	; 255
 5d4:	8f 4f       	sbci	r24, 0xFF	; 255
 5d6:	9f 4f       	sbci	r25, 0xFF	; 255
 5d8:	f0 68       	ori	r31, 0x80	; 128
 5da:	3f 2e       	mov	r3, r31
 5dc:	2a e0       	ldi	r18, 0x0A	; 10
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	a3 01       	movw	r20, r6
 5e2:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 5e6:	88 2e       	mov	r8, r24
 5e8:	86 18       	sub	r8, r6
 5ea:	45 c0       	rjmp	.+138    	; 0x676 <__stack+0x177>
 5ec:	85 37       	cpi	r24, 0x75	; 117
 5ee:	31 f4       	brne	.+12     	; 0x5fc <__stack+0xfd>
 5f0:	23 2d       	mov	r18, r3
 5f2:	2f 7e       	andi	r18, 0xEF	; 239
 5f4:	b2 2e       	mov	r11, r18
 5f6:	2a e0       	ldi	r18, 0x0A	; 10
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	25 c0       	rjmp	.+74     	; 0x646 <__stack+0x147>
 5fc:	93 2d       	mov	r25, r3
 5fe:	99 7f       	andi	r25, 0xF9	; 249
 600:	b9 2e       	mov	r11, r25
 602:	8f 36       	cpi	r24, 0x6F	; 111
 604:	c1 f0       	breq	.+48     	; 0x636 <__stack+0x137>
 606:	18 f4       	brcc	.+6      	; 0x60e <__stack+0x10f>
 608:	88 35       	cpi	r24, 0x58	; 88
 60a:	79 f0       	breq	.+30     	; 0x62a <__stack+0x12b>
 60c:	b5 c0       	rjmp	.+362    	; 0x778 <__stack+0x279>
 60e:	80 37       	cpi	r24, 0x70	; 112
 610:	19 f0       	breq	.+6      	; 0x618 <__stack+0x119>
 612:	88 37       	cpi	r24, 0x78	; 120
 614:	21 f0       	breq	.+8      	; 0x61e <__stack+0x11f>
 616:	b0 c0       	rjmp	.+352    	; 0x778 <__stack+0x279>
 618:	e9 2f       	mov	r30, r25
 61a:	e0 61       	ori	r30, 0x10	; 16
 61c:	be 2e       	mov	r11, r30
 61e:	b4 fe       	sbrs	r11, 4
 620:	0d c0       	rjmp	.+26     	; 0x63c <__stack+0x13d>
 622:	fb 2d       	mov	r31, r11
 624:	f4 60       	ori	r31, 0x04	; 4
 626:	bf 2e       	mov	r11, r31
 628:	09 c0       	rjmp	.+18     	; 0x63c <__stack+0x13d>
 62a:	34 fe       	sbrs	r3, 4
 62c:	0a c0       	rjmp	.+20     	; 0x642 <__stack+0x143>
 62e:	29 2f       	mov	r18, r25
 630:	26 60       	ori	r18, 0x06	; 6
 632:	b2 2e       	mov	r11, r18
 634:	06 c0       	rjmp	.+12     	; 0x642 <__stack+0x143>
 636:	28 e0       	ldi	r18, 0x08	; 8
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	05 c0       	rjmp	.+10     	; 0x646 <__stack+0x147>
 63c:	20 e1       	ldi	r18, 0x10	; 16
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	02 c0       	rjmp	.+4      	; 0x646 <__stack+0x147>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	32 e0       	ldi	r19, 0x02	; 2
 646:	f8 01       	movw	r30, r16
 648:	b7 fe       	sbrs	r11, 7
 64a:	07 c0       	rjmp	.+14     	; 0x65a <__stack+0x15b>
 64c:	60 81       	ld	r22, Z
 64e:	71 81       	ldd	r23, Z+1	; 0x01
 650:	82 81       	ldd	r24, Z+2	; 0x02
 652:	93 81       	ldd	r25, Z+3	; 0x03
 654:	0c 5f       	subi	r16, 0xFC	; 252
 656:	1f 4f       	sbci	r17, 0xFF	; 255
 658:	06 c0       	rjmp	.+12     	; 0x666 <__stack+0x167>
 65a:	60 81       	ld	r22, Z
 65c:	71 81       	ldd	r23, Z+1	; 0x01
 65e:	80 e0       	ldi	r24, 0x00	; 0
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	0e 5f       	subi	r16, 0xFE	; 254
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	a3 01       	movw	r20, r6
 668:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 66c:	88 2e       	mov	r8, r24
 66e:	86 18       	sub	r8, r6
 670:	fb 2d       	mov	r31, r11
 672:	ff 77       	andi	r31, 0x7F	; 127
 674:	3f 2e       	mov	r3, r31
 676:	36 fe       	sbrs	r3, 6
 678:	0d c0       	rjmp	.+26     	; 0x694 <__stack+0x195>
 67a:	23 2d       	mov	r18, r3
 67c:	2e 7f       	andi	r18, 0xFE	; 254
 67e:	a2 2e       	mov	r10, r18
 680:	89 14       	cp	r8, r9
 682:	58 f4       	brcc	.+22     	; 0x69a <__stack+0x19b>
 684:	34 fe       	sbrs	r3, 4
 686:	0b c0       	rjmp	.+22     	; 0x69e <__stack+0x19f>
 688:	32 fc       	sbrc	r3, 2
 68a:	09 c0       	rjmp	.+18     	; 0x69e <__stack+0x19f>
 68c:	83 2d       	mov	r24, r3
 68e:	8e 7e       	andi	r24, 0xEE	; 238
 690:	a8 2e       	mov	r10, r24
 692:	05 c0       	rjmp	.+10     	; 0x69e <__stack+0x19f>
 694:	b8 2c       	mov	r11, r8
 696:	a3 2c       	mov	r10, r3
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <__stack+0x1a1>
 69a:	b8 2c       	mov	r11, r8
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__stack+0x1a1>
 69e:	b9 2c       	mov	r11, r9
 6a0:	a4 fe       	sbrs	r10, 4
 6a2:	0f c0       	rjmp	.+30     	; 0x6c2 <__stack+0x1c3>
 6a4:	fe 01       	movw	r30, r28
 6a6:	e8 0d       	add	r30, r8
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	80 33       	cpi	r24, 0x30	; 48
 6ae:	21 f4       	brne	.+8      	; 0x6b8 <__stack+0x1b9>
 6b0:	9a 2d       	mov	r25, r10
 6b2:	99 7e       	andi	r25, 0xE9	; 233
 6b4:	a9 2e       	mov	r10, r25
 6b6:	09 c0       	rjmp	.+18     	; 0x6ca <__stack+0x1cb>
 6b8:	a2 fe       	sbrs	r10, 2
 6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <__stack+0x1c9>
 6bc:	b3 94       	inc	r11
 6be:	b3 94       	inc	r11
 6c0:	04 c0       	rjmp	.+8      	; 0x6ca <__stack+0x1cb>
 6c2:	8a 2d       	mov	r24, r10
 6c4:	86 78       	andi	r24, 0x86	; 134
 6c6:	09 f0       	breq	.+2      	; 0x6ca <__stack+0x1cb>
 6c8:	b3 94       	inc	r11
 6ca:	a3 fc       	sbrc	r10, 3
 6cc:	11 c0       	rjmp	.+34     	; 0x6f0 <__stack+0x1f1>
 6ce:	a0 fe       	sbrs	r10, 0
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <__stack+0x1df>
 6d2:	b2 14       	cp	r11, r2
 6d4:	88 f4       	brcc	.+34     	; 0x6f8 <__stack+0x1f9>
 6d6:	28 0c       	add	r2, r8
 6d8:	92 2c       	mov	r9, r2
 6da:	9b 18       	sub	r9, r11
 6dc:	0e c0       	rjmp	.+28     	; 0x6fa <__stack+0x1fb>
 6de:	b2 14       	cp	r11, r2
 6e0:	60 f4       	brcc	.+24     	; 0x6fa <__stack+0x1fb>
 6e2:	b6 01       	movw	r22, r12
 6e4:	80 e2       	ldi	r24, 0x20	; 32
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 6ec:	b3 94       	inc	r11
 6ee:	f7 cf       	rjmp	.-18     	; 0x6de <__stack+0x1df>
 6f0:	b2 14       	cp	r11, r2
 6f2:	18 f4       	brcc	.+6      	; 0x6fa <__stack+0x1fb>
 6f4:	2b 18       	sub	r2, r11
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <__stack+0x1fd>
 6f8:	98 2c       	mov	r9, r8
 6fa:	21 2c       	mov	r2, r1
 6fc:	a4 fe       	sbrs	r10, 4
 6fe:	10 c0       	rjmp	.+32     	; 0x720 <__stack+0x221>
 700:	b6 01       	movw	r22, r12
 702:	80 e3       	ldi	r24, 0x30	; 48
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 70a:	a2 fe       	sbrs	r10, 2
 70c:	17 c0       	rjmp	.+46     	; 0x73c <__stack+0x23d>
 70e:	a1 fc       	sbrc	r10, 1
 710:	03 c0       	rjmp	.+6      	; 0x718 <__stack+0x219>
 712:	88 e7       	ldi	r24, 0x78	; 120
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <__stack+0x21d>
 718:	88 e5       	ldi	r24, 0x58	; 88
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	b6 01       	movw	r22, r12
 71e:	0c c0       	rjmp	.+24     	; 0x738 <__stack+0x239>
 720:	8a 2d       	mov	r24, r10
 722:	86 78       	andi	r24, 0x86	; 134
 724:	59 f0       	breq	.+22     	; 0x73c <__stack+0x23d>
 726:	a1 fe       	sbrs	r10, 1
 728:	02 c0       	rjmp	.+4      	; 0x72e <__stack+0x22f>
 72a:	8b e2       	ldi	r24, 0x2B	; 43
 72c:	01 c0       	rjmp	.+2      	; 0x730 <__stack+0x231>
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	a7 fc       	sbrc	r10, 7
 732:	8d e2       	ldi	r24, 0x2D	; 45
 734:	b6 01       	movw	r22, r12
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 73c:	89 14       	cp	r8, r9
 73e:	38 f4       	brcc	.+14     	; 0x74e <__stack+0x24f>
 740:	b6 01       	movw	r22, r12
 742:	80 e3       	ldi	r24, 0x30	; 48
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 74a:	9a 94       	dec	r9
 74c:	f7 cf       	rjmp	.-18     	; 0x73c <__stack+0x23d>
 74e:	8a 94       	dec	r8
 750:	f3 01       	movw	r30, r6
 752:	e8 0d       	add	r30, r8
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	b6 01       	movw	r22, r12
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 760:	81 10       	cpse	r8, r1
 762:	f5 cf       	rjmp	.-22     	; 0x74e <__stack+0x24f>
 764:	22 20       	and	r2, r2
 766:	09 f4       	brne	.+2      	; 0x76a <__stack+0x26b>
 768:	42 ce       	rjmp	.-892    	; 0x3ee <vfprintf+0x24>
 76a:	b6 01       	movw	r22, r12
 76c:	80 e2       	ldi	r24, 0x20	; 32
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	0e 94 20 05 	call	0xa40	; 0xa40 <fputc>
 774:	2a 94       	dec	r2
 776:	f6 cf       	rjmp	.-20     	; 0x764 <__stack+0x265>
 778:	f6 01       	movw	r30, r12
 77a:	86 81       	ldd	r24, Z+6	; 0x06
 77c:	97 81       	ldd	r25, Z+7	; 0x07
 77e:	02 c0       	rjmp	.+4      	; 0x784 <__stack+0x285>
 780:	8f ef       	ldi	r24, 0xFF	; 255
 782:	9f ef       	ldi	r25, 0xFF	; 255
 784:	2b 96       	adiw	r28, 0x0b	; 11
 786:	e2 e1       	ldi	r30, 0x12	; 18
 788:	0c 94 08 06 	jmp	0xc10	; 0xc10 <__epilogue_restores__>

0000078c <calloc>:
 78c:	0f 93       	push	r16
 78e:	1f 93       	push	r17
 790:	cf 93       	push	r28
 792:	df 93       	push	r29
 794:	86 9f       	mul	r24, r22
 796:	80 01       	movw	r16, r0
 798:	87 9f       	mul	r24, r23
 79a:	10 0d       	add	r17, r0
 79c:	96 9f       	mul	r25, r22
 79e:	10 0d       	add	r17, r0
 7a0:	11 24       	eor	r1, r1
 7a2:	c8 01       	movw	r24, r16
 7a4:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <malloc>
 7a8:	ec 01       	movw	r28, r24
 7aa:	00 97       	sbiw	r24, 0x00	; 0
 7ac:	29 f0       	breq	.+10     	; 0x7b8 <calloc+0x2c>
 7ae:	a8 01       	movw	r20, r16
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	70 e0       	ldi	r23, 0x00	; 0
 7b4:	0e 94 0e 05 	call	0xa1c	; 0xa1c <memset>
 7b8:	ce 01       	movw	r24, r28
 7ba:	df 91       	pop	r29
 7bc:	cf 91       	pop	r28
 7be:	1f 91       	pop	r17
 7c0:	0f 91       	pop	r16
 7c2:	08 95       	ret

000007c4 <malloc>:
 7c4:	0f 93       	push	r16
 7c6:	1f 93       	push	r17
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	82 30       	cpi	r24, 0x02	; 2
 7ce:	91 05       	cpc	r25, r1
 7d0:	10 f4       	brcc	.+4      	; 0x7d6 <malloc+0x12>
 7d2:	82 e0       	ldi	r24, 0x02	; 2
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <__flp>
 7da:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <__flp+0x1>
 7de:	20 e0       	ldi	r18, 0x00	; 0
 7e0:	30 e0       	ldi	r19, 0x00	; 0
 7e2:	a0 e0       	ldi	r26, 0x00	; 0
 7e4:	b0 e0       	ldi	r27, 0x00	; 0
 7e6:	30 97       	sbiw	r30, 0x00	; 0
 7e8:	19 f1       	breq	.+70     	; 0x830 <malloc+0x6c>
 7ea:	40 81       	ld	r20, Z
 7ec:	51 81       	ldd	r21, Z+1	; 0x01
 7ee:	02 81       	ldd	r16, Z+2	; 0x02
 7f0:	13 81       	ldd	r17, Z+3	; 0x03
 7f2:	48 17       	cp	r20, r24
 7f4:	59 07       	cpc	r21, r25
 7f6:	c8 f0       	brcs	.+50     	; 0x82a <malloc+0x66>
 7f8:	84 17       	cp	r24, r20
 7fa:	95 07       	cpc	r25, r21
 7fc:	69 f4       	brne	.+26     	; 0x818 <malloc+0x54>
 7fe:	10 97       	sbiw	r26, 0x00	; 0
 800:	31 f0       	breq	.+12     	; 0x80e <malloc+0x4a>
 802:	12 96       	adiw	r26, 0x02	; 2
 804:	0c 93       	st	X, r16
 806:	12 97       	sbiw	r26, 0x02	; 2
 808:	13 96       	adiw	r26, 0x03	; 3
 80a:	1c 93       	st	X, r17
 80c:	27 c0       	rjmp	.+78     	; 0x85c <malloc+0x98>
 80e:	00 93 f8 01 	sts	0x01F8, r16	; 0x8001f8 <__flp>
 812:	10 93 f9 01 	sts	0x01F9, r17	; 0x8001f9 <__flp+0x1>
 816:	22 c0       	rjmp	.+68     	; 0x85c <malloc+0x98>
 818:	21 15       	cp	r18, r1
 81a:	31 05       	cpc	r19, r1
 81c:	19 f0       	breq	.+6      	; 0x824 <malloc+0x60>
 81e:	42 17       	cp	r20, r18
 820:	53 07       	cpc	r21, r19
 822:	18 f4       	brcc	.+6      	; 0x82a <malloc+0x66>
 824:	9a 01       	movw	r18, r20
 826:	bd 01       	movw	r22, r26
 828:	ef 01       	movw	r28, r30
 82a:	df 01       	movw	r26, r30
 82c:	f8 01       	movw	r30, r16
 82e:	db cf       	rjmp	.-74     	; 0x7e6 <malloc+0x22>
 830:	21 15       	cp	r18, r1
 832:	31 05       	cpc	r19, r1
 834:	f9 f0       	breq	.+62     	; 0x874 <malloc+0xb0>
 836:	28 1b       	sub	r18, r24
 838:	39 0b       	sbc	r19, r25
 83a:	24 30       	cpi	r18, 0x04	; 4
 83c:	31 05       	cpc	r19, r1
 83e:	80 f4       	brcc	.+32     	; 0x860 <malloc+0x9c>
 840:	8a 81       	ldd	r24, Y+2	; 0x02
 842:	9b 81       	ldd	r25, Y+3	; 0x03
 844:	61 15       	cp	r22, r1
 846:	71 05       	cpc	r23, r1
 848:	21 f0       	breq	.+8      	; 0x852 <malloc+0x8e>
 84a:	fb 01       	movw	r30, r22
 84c:	93 83       	std	Z+3, r25	; 0x03
 84e:	82 83       	std	Z+2, r24	; 0x02
 850:	04 c0       	rjmp	.+8      	; 0x85a <malloc+0x96>
 852:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__flp+0x1>
 856:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__flp>
 85a:	fe 01       	movw	r30, r28
 85c:	32 96       	adiw	r30, 0x02	; 2
 85e:	44 c0       	rjmp	.+136    	; 0x8e8 <malloc+0x124>
 860:	fe 01       	movw	r30, r28
 862:	e2 0f       	add	r30, r18
 864:	f3 1f       	adc	r31, r19
 866:	81 93       	st	Z+, r24
 868:	91 93       	st	Z+, r25
 86a:	22 50       	subi	r18, 0x02	; 2
 86c:	31 09       	sbc	r19, r1
 86e:	39 83       	std	Y+1, r19	; 0x01
 870:	28 83       	st	Y, r18
 872:	3a c0       	rjmp	.+116    	; 0x8e8 <malloc+0x124>
 874:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 878:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 87c:	23 2b       	or	r18, r19
 87e:	41 f4       	brne	.+16     	; 0x890 <malloc+0xcc>
 880:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 884:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 888:	30 93 f7 01 	sts	0x01F7, r19	; 0x8001f7 <__brkval+0x1>
 88c:	20 93 f6 01 	sts	0x01F6, r18	; 0x8001f6 <__brkval>
 890:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 894:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 898:	21 15       	cp	r18, r1
 89a:	31 05       	cpc	r19, r1
 89c:	41 f4       	brne	.+16     	; 0x8ae <malloc+0xea>
 89e:	2d b7       	in	r18, 0x3d	; 61
 8a0:	3e b7       	in	r19, 0x3e	; 62
 8a2:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8a6:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8aa:	24 1b       	sub	r18, r20
 8ac:	35 0b       	sbc	r19, r21
 8ae:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <__brkval>
 8b2:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <__brkval+0x1>
 8b6:	e2 17       	cp	r30, r18
 8b8:	f3 07       	cpc	r31, r19
 8ba:	a0 f4       	brcc	.+40     	; 0x8e4 <malloc+0x120>
 8bc:	2e 1b       	sub	r18, r30
 8be:	3f 0b       	sbc	r19, r31
 8c0:	28 17       	cp	r18, r24
 8c2:	39 07       	cpc	r19, r25
 8c4:	78 f0       	brcs	.+30     	; 0x8e4 <malloc+0x120>
 8c6:	ac 01       	movw	r20, r24
 8c8:	4e 5f       	subi	r20, 0xFE	; 254
 8ca:	5f 4f       	sbci	r21, 0xFF	; 255
 8cc:	24 17       	cp	r18, r20
 8ce:	35 07       	cpc	r19, r21
 8d0:	48 f0       	brcs	.+18     	; 0x8e4 <malloc+0x120>
 8d2:	4e 0f       	add	r20, r30
 8d4:	5f 1f       	adc	r21, r31
 8d6:	50 93 f7 01 	sts	0x01F7, r21	; 0x8001f7 <__brkval+0x1>
 8da:	40 93 f6 01 	sts	0x01F6, r20	; 0x8001f6 <__brkval>
 8de:	81 93       	st	Z+, r24
 8e0:	91 93       	st	Z+, r25
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <malloc+0x124>
 8e4:	e0 e0       	ldi	r30, 0x00	; 0
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	cf 01       	movw	r24, r30
 8ea:	df 91       	pop	r29
 8ec:	cf 91       	pop	r28
 8ee:	1f 91       	pop	r17
 8f0:	0f 91       	pop	r16
 8f2:	08 95       	ret

000008f4 <free>:
 8f4:	cf 93       	push	r28
 8f6:	df 93       	push	r29
 8f8:	00 97       	sbiw	r24, 0x00	; 0
 8fa:	09 f4       	brne	.+2      	; 0x8fe <free+0xa>
 8fc:	81 c0       	rjmp	.+258    	; 0xa00 <free+0x10c>
 8fe:	fc 01       	movw	r30, r24
 900:	32 97       	sbiw	r30, 0x02	; 2
 902:	13 82       	std	Z+3, r1	; 0x03
 904:	12 82       	std	Z+2, r1	; 0x02
 906:	a0 91 f8 01 	lds	r26, 0x01F8	; 0x8001f8 <__flp>
 90a:	b0 91 f9 01 	lds	r27, 0x01F9	; 0x8001f9 <__flp+0x1>
 90e:	10 97       	sbiw	r26, 0x00	; 0
 910:	81 f4       	brne	.+32     	; 0x932 <free+0x3e>
 912:	20 81       	ld	r18, Z
 914:	31 81       	ldd	r19, Z+1	; 0x01
 916:	82 0f       	add	r24, r18
 918:	93 1f       	adc	r25, r19
 91a:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 91e:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 922:	28 17       	cp	r18, r24
 924:	39 07       	cpc	r19, r25
 926:	51 f5       	brne	.+84     	; 0x97c <free+0x88>
 928:	f0 93 f7 01 	sts	0x01F7, r31	; 0x8001f7 <__brkval+0x1>
 92c:	e0 93 f6 01 	sts	0x01F6, r30	; 0x8001f6 <__brkval>
 930:	67 c0       	rjmp	.+206    	; 0xa00 <free+0x10c>
 932:	ed 01       	movw	r28, r26
 934:	20 e0       	ldi	r18, 0x00	; 0
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	ce 17       	cp	r28, r30
 93a:	df 07       	cpc	r29, r31
 93c:	40 f4       	brcc	.+16     	; 0x94e <free+0x5a>
 93e:	4a 81       	ldd	r20, Y+2	; 0x02
 940:	5b 81       	ldd	r21, Y+3	; 0x03
 942:	9e 01       	movw	r18, r28
 944:	41 15       	cp	r20, r1
 946:	51 05       	cpc	r21, r1
 948:	f1 f0       	breq	.+60     	; 0x986 <free+0x92>
 94a:	ea 01       	movw	r28, r20
 94c:	f5 cf       	rjmp	.-22     	; 0x938 <free+0x44>
 94e:	d3 83       	std	Z+3, r29	; 0x03
 950:	c2 83       	std	Z+2, r28	; 0x02
 952:	40 81       	ld	r20, Z
 954:	51 81       	ldd	r21, Z+1	; 0x01
 956:	84 0f       	add	r24, r20
 958:	95 1f       	adc	r25, r21
 95a:	c8 17       	cp	r28, r24
 95c:	d9 07       	cpc	r29, r25
 95e:	59 f4       	brne	.+22     	; 0x976 <free+0x82>
 960:	88 81       	ld	r24, Y
 962:	99 81       	ldd	r25, Y+1	; 0x01
 964:	84 0f       	add	r24, r20
 966:	95 1f       	adc	r25, r21
 968:	02 96       	adiw	r24, 0x02	; 2
 96a:	91 83       	std	Z+1, r25	; 0x01
 96c:	80 83       	st	Z, r24
 96e:	8a 81       	ldd	r24, Y+2	; 0x02
 970:	9b 81       	ldd	r25, Y+3	; 0x03
 972:	93 83       	std	Z+3, r25	; 0x03
 974:	82 83       	std	Z+2, r24	; 0x02
 976:	21 15       	cp	r18, r1
 978:	31 05       	cpc	r19, r1
 97a:	29 f4       	brne	.+10     	; 0x986 <free+0x92>
 97c:	f0 93 f9 01 	sts	0x01F9, r31	; 0x8001f9 <__flp+0x1>
 980:	e0 93 f8 01 	sts	0x01F8, r30	; 0x8001f8 <__flp>
 984:	3d c0       	rjmp	.+122    	; 0xa00 <free+0x10c>
 986:	e9 01       	movw	r28, r18
 988:	fb 83       	std	Y+3, r31	; 0x03
 98a:	ea 83       	std	Y+2, r30	; 0x02
 98c:	49 91       	ld	r20, Y+
 98e:	59 91       	ld	r21, Y+
 990:	c4 0f       	add	r28, r20
 992:	d5 1f       	adc	r29, r21
 994:	ec 17       	cp	r30, r28
 996:	fd 07       	cpc	r31, r29
 998:	61 f4       	brne	.+24     	; 0x9b2 <free+0xbe>
 99a:	80 81       	ld	r24, Z
 99c:	91 81       	ldd	r25, Z+1	; 0x01
 99e:	84 0f       	add	r24, r20
 9a0:	95 1f       	adc	r25, r21
 9a2:	02 96       	adiw	r24, 0x02	; 2
 9a4:	e9 01       	movw	r28, r18
 9a6:	99 83       	std	Y+1, r25	; 0x01
 9a8:	88 83       	st	Y, r24
 9aa:	82 81       	ldd	r24, Z+2	; 0x02
 9ac:	93 81       	ldd	r25, Z+3	; 0x03
 9ae:	9b 83       	std	Y+3, r25	; 0x03
 9b0:	8a 83       	std	Y+2, r24	; 0x02
 9b2:	e0 e0       	ldi	r30, 0x00	; 0
 9b4:	f0 e0       	ldi	r31, 0x00	; 0
 9b6:	12 96       	adiw	r26, 0x02	; 2
 9b8:	8d 91       	ld	r24, X+
 9ba:	9c 91       	ld	r25, X
 9bc:	13 97       	sbiw	r26, 0x03	; 3
 9be:	00 97       	sbiw	r24, 0x00	; 0
 9c0:	19 f0       	breq	.+6      	; 0x9c8 <free+0xd4>
 9c2:	fd 01       	movw	r30, r26
 9c4:	dc 01       	movw	r26, r24
 9c6:	f7 cf       	rjmp	.-18     	; 0x9b6 <free+0xc2>
 9c8:	8d 91       	ld	r24, X+
 9ca:	9c 91       	ld	r25, X
 9cc:	11 97       	sbiw	r26, 0x01	; 1
 9ce:	9d 01       	movw	r18, r26
 9d0:	2e 5f       	subi	r18, 0xFE	; 254
 9d2:	3f 4f       	sbci	r19, 0xFF	; 255
 9d4:	82 0f       	add	r24, r18
 9d6:	93 1f       	adc	r25, r19
 9d8:	20 91 f6 01 	lds	r18, 0x01F6	; 0x8001f6 <__brkval>
 9dc:	30 91 f7 01 	lds	r19, 0x01F7	; 0x8001f7 <__brkval+0x1>
 9e0:	28 17       	cp	r18, r24
 9e2:	39 07       	cpc	r19, r25
 9e4:	69 f4       	brne	.+26     	; 0xa00 <free+0x10c>
 9e6:	30 97       	sbiw	r30, 0x00	; 0
 9e8:	29 f4       	brne	.+10     	; 0x9f4 <free+0x100>
 9ea:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <__flp+0x1>
 9ee:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <__flp>
 9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <free+0x104>
 9f4:	13 82       	std	Z+3, r1	; 0x03
 9f6:	12 82       	std	Z+2, r1	; 0x02
 9f8:	b0 93 f7 01 	sts	0x01F7, r27	; 0x8001f7 <__brkval+0x1>
 9fc:	a0 93 f6 01 	sts	0x01F6, r26	; 0x8001f6 <__brkval>
 a00:	df 91       	pop	r29
 a02:	cf 91       	pop	r28
 a04:	08 95       	ret

00000a06 <strnlen_P>:
 a06:	fc 01       	movw	r30, r24
 a08:	05 90       	lpm	r0, Z+
 a0a:	61 50       	subi	r22, 0x01	; 1
 a0c:	70 40       	sbci	r23, 0x00	; 0
 a0e:	01 10       	cpse	r0, r1
 a10:	d8 f7       	brcc	.-10     	; 0xa08 <strnlen_P+0x2>
 a12:	80 95       	com	r24
 a14:	90 95       	com	r25
 a16:	8e 0f       	add	r24, r30
 a18:	9f 1f       	adc	r25, r31
 a1a:	08 95       	ret

00000a1c <memset>:
 a1c:	dc 01       	movw	r26, r24
 a1e:	01 c0       	rjmp	.+2      	; 0xa22 <memset+0x6>
 a20:	6d 93       	st	X+, r22
 a22:	41 50       	subi	r20, 0x01	; 1
 a24:	50 40       	sbci	r21, 0x00	; 0
 a26:	e0 f7       	brcc	.-8      	; 0xa20 <memset+0x4>
 a28:	08 95       	ret

00000a2a <strnlen>:
 a2a:	fc 01       	movw	r30, r24
 a2c:	61 50       	subi	r22, 0x01	; 1
 a2e:	70 40       	sbci	r23, 0x00	; 0
 a30:	01 90       	ld	r0, Z+
 a32:	01 10       	cpse	r0, r1
 a34:	d8 f7       	brcc	.-10     	; 0xa2c <strnlen+0x2>
 a36:	80 95       	com	r24
 a38:	90 95       	com	r25
 a3a:	8e 0f       	add	r24, r30
 a3c:	9f 1f       	adc	r25, r31
 a3e:	08 95       	ret

00000a40 <fputc>:
 a40:	0f 93       	push	r16
 a42:	1f 93       	push	r17
 a44:	cf 93       	push	r28
 a46:	df 93       	push	r29
 a48:	fb 01       	movw	r30, r22
 a4a:	23 81       	ldd	r18, Z+3	; 0x03
 a4c:	21 fd       	sbrc	r18, 1
 a4e:	03 c0       	rjmp	.+6      	; 0xa56 <fputc+0x16>
 a50:	8f ef       	ldi	r24, 0xFF	; 255
 a52:	9f ef       	ldi	r25, 0xFF	; 255
 a54:	2c c0       	rjmp	.+88     	; 0xaae <fputc+0x6e>
 a56:	22 ff       	sbrs	r18, 2
 a58:	16 c0       	rjmp	.+44     	; 0xa86 <fputc+0x46>
 a5a:	46 81       	ldd	r20, Z+6	; 0x06
 a5c:	57 81       	ldd	r21, Z+7	; 0x07
 a5e:	24 81       	ldd	r18, Z+4	; 0x04
 a60:	35 81       	ldd	r19, Z+5	; 0x05
 a62:	42 17       	cp	r20, r18
 a64:	53 07       	cpc	r21, r19
 a66:	44 f4       	brge	.+16     	; 0xa78 <fputc+0x38>
 a68:	a0 81       	ld	r26, Z
 a6a:	b1 81       	ldd	r27, Z+1	; 0x01
 a6c:	9d 01       	movw	r18, r26
 a6e:	2f 5f       	subi	r18, 0xFF	; 255
 a70:	3f 4f       	sbci	r19, 0xFF	; 255
 a72:	31 83       	std	Z+1, r19	; 0x01
 a74:	20 83       	st	Z, r18
 a76:	8c 93       	st	X, r24
 a78:	26 81       	ldd	r18, Z+6	; 0x06
 a7a:	37 81       	ldd	r19, Z+7	; 0x07
 a7c:	2f 5f       	subi	r18, 0xFF	; 255
 a7e:	3f 4f       	sbci	r19, 0xFF	; 255
 a80:	37 83       	std	Z+7, r19	; 0x07
 a82:	26 83       	std	Z+6, r18	; 0x06
 a84:	14 c0       	rjmp	.+40     	; 0xaae <fputc+0x6e>
 a86:	8b 01       	movw	r16, r22
 a88:	ec 01       	movw	r28, r24
 a8a:	fb 01       	movw	r30, r22
 a8c:	00 84       	ldd	r0, Z+8	; 0x08
 a8e:	f1 85       	ldd	r31, Z+9	; 0x09
 a90:	e0 2d       	mov	r30, r0
 a92:	09 95       	icall
 a94:	89 2b       	or	r24, r25
 a96:	e1 f6       	brne	.-72     	; 0xa50 <fputc+0x10>
 a98:	d8 01       	movw	r26, r16
 a9a:	16 96       	adiw	r26, 0x06	; 6
 a9c:	8d 91       	ld	r24, X+
 a9e:	9c 91       	ld	r25, X
 aa0:	17 97       	sbiw	r26, 0x07	; 7
 aa2:	01 96       	adiw	r24, 0x01	; 1
 aa4:	17 96       	adiw	r26, 0x07	; 7
 aa6:	9c 93       	st	X, r25
 aa8:	8e 93       	st	-X, r24
 aaa:	16 97       	sbiw	r26, 0x06	; 6
 aac:	ce 01       	movw	r24, r28
 aae:	df 91       	pop	r29
 ab0:	cf 91       	pop	r28
 ab2:	1f 91       	pop	r17
 ab4:	0f 91       	pop	r16
 ab6:	08 95       	ret

00000ab8 <__ultoa_invert>:
 ab8:	fa 01       	movw	r30, r20
 aba:	aa 27       	eor	r26, r26
 abc:	28 30       	cpi	r18, 0x08	; 8
 abe:	51 f1       	breq	.+84     	; 0xb14 <__ultoa_invert+0x5c>
 ac0:	20 31       	cpi	r18, 0x10	; 16
 ac2:	81 f1       	breq	.+96     	; 0xb24 <__ultoa_invert+0x6c>
 ac4:	e8 94       	clt
 ac6:	6f 93       	push	r22
 ac8:	6e 7f       	andi	r22, 0xFE	; 254
 aca:	6e 5f       	subi	r22, 0xFE	; 254
 acc:	7f 4f       	sbci	r23, 0xFF	; 255
 ace:	8f 4f       	sbci	r24, 0xFF	; 255
 ad0:	9f 4f       	sbci	r25, 0xFF	; 255
 ad2:	af 4f       	sbci	r26, 0xFF	; 255
 ad4:	b1 e0       	ldi	r27, 0x01	; 1
 ad6:	3e d0       	rcall	.+124    	; 0xb54 <__ultoa_invert+0x9c>
 ad8:	b4 e0       	ldi	r27, 0x04	; 4
 ada:	3c d0       	rcall	.+120    	; 0xb54 <__ultoa_invert+0x9c>
 adc:	67 0f       	add	r22, r23
 ade:	78 1f       	adc	r23, r24
 ae0:	89 1f       	adc	r24, r25
 ae2:	9a 1f       	adc	r25, r26
 ae4:	a1 1d       	adc	r26, r1
 ae6:	68 0f       	add	r22, r24
 ae8:	79 1f       	adc	r23, r25
 aea:	8a 1f       	adc	r24, r26
 aec:	91 1d       	adc	r25, r1
 aee:	a1 1d       	adc	r26, r1
 af0:	6a 0f       	add	r22, r26
 af2:	71 1d       	adc	r23, r1
 af4:	81 1d       	adc	r24, r1
 af6:	91 1d       	adc	r25, r1
 af8:	a1 1d       	adc	r26, r1
 afa:	20 d0       	rcall	.+64     	; 0xb3c <__ultoa_invert+0x84>
 afc:	09 f4       	brne	.+2      	; 0xb00 <__ultoa_invert+0x48>
 afe:	68 94       	set
 b00:	3f 91       	pop	r19
 b02:	2a e0       	ldi	r18, 0x0A	; 10
 b04:	26 9f       	mul	r18, r22
 b06:	11 24       	eor	r1, r1
 b08:	30 19       	sub	r19, r0
 b0a:	30 5d       	subi	r19, 0xD0	; 208
 b0c:	31 93       	st	Z+, r19
 b0e:	de f6       	brtc	.-74     	; 0xac6 <__ultoa_invert+0xe>
 b10:	cf 01       	movw	r24, r30
 b12:	08 95       	ret
 b14:	46 2f       	mov	r20, r22
 b16:	47 70       	andi	r20, 0x07	; 7
 b18:	40 5d       	subi	r20, 0xD0	; 208
 b1a:	41 93       	st	Z+, r20
 b1c:	b3 e0       	ldi	r27, 0x03	; 3
 b1e:	0f d0       	rcall	.+30     	; 0xb3e <__ultoa_invert+0x86>
 b20:	c9 f7       	brne	.-14     	; 0xb14 <__ultoa_invert+0x5c>
 b22:	f6 cf       	rjmp	.-20     	; 0xb10 <__ultoa_invert+0x58>
 b24:	46 2f       	mov	r20, r22
 b26:	4f 70       	andi	r20, 0x0F	; 15
 b28:	40 5d       	subi	r20, 0xD0	; 208
 b2a:	4a 33       	cpi	r20, 0x3A	; 58
 b2c:	18 f0       	brcs	.+6      	; 0xb34 <__ultoa_invert+0x7c>
 b2e:	49 5d       	subi	r20, 0xD9	; 217
 b30:	31 fd       	sbrc	r19, 1
 b32:	40 52       	subi	r20, 0x20	; 32
 b34:	41 93       	st	Z+, r20
 b36:	02 d0       	rcall	.+4      	; 0xb3c <__ultoa_invert+0x84>
 b38:	a9 f7       	brne	.-22     	; 0xb24 <__ultoa_invert+0x6c>
 b3a:	ea cf       	rjmp	.-44     	; 0xb10 <__ultoa_invert+0x58>
 b3c:	b4 e0       	ldi	r27, 0x04	; 4
 b3e:	a6 95       	lsr	r26
 b40:	97 95       	ror	r25
 b42:	87 95       	ror	r24
 b44:	77 95       	ror	r23
 b46:	67 95       	ror	r22
 b48:	ba 95       	dec	r27
 b4a:	c9 f7       	brne	.-14     	; 0xb3e <__ultoa_invert+0x86>
 b4c:	00 97       	sbiw	r24, 0x00	; 0
 b4e:	61 05       	cpc	r22, r1
 b50:	71 05       	cpc	r23, r1
 b52:	08 95       	ret
 b54:	9b 01       	movw	r18, r22
 b56:	ac 01       	movw	r20, r24
 b58:	0a 2e       	mov	r0, r26
 b5a:	06 94       	lsr	r0
 b5c:	57 95       	ror	r21
 b5e:	47 95       	ror	r20
 b60:	37 95       	ror	r19
 b62:	27 95       	ror	r18
 b64:	ba 95       	dec	r27
 b66:	c9 f7       	brne	.-14     	; 0xb5a <__ultoa_invert+0xa2>
 b68:	62 0f       	add	r22, r18
 b6a:	73 1f       	adc	r23, r19
 b6c:	84 1f       	adc	r24, r20
 b6e:	95 1f       	adc	r25, r21
 b70:	a0 1d       	adc	r26, r0
 b72:	08 95       	ret

00000b74 <__divmodsi4>:
 b74:	05 2e       	mov	r0, r21
 b76:	97 fb       	bst	r25, 7
 b78:	1e f4       	brtc	.+6      	; 0xb80 <__divmodsi4+0xc>
 b7a:	00 94       	com	r0
 b7c:	0e 94 d1 05 	call	0xba2	; 0xba2 <__negsi2>
 b80:	57 fd       	sbrc	r21, 7
 b82:	07 d0       	rcall	.+14     	; 0xb92 <__divmodsi4_neg2>
 b84:	0e 94 23 06 	call	0xc46	; 0xc46 <__udivmodsi4>
 b88:	07 fc       	sbrc	r0, 7
 b8a:	03 d0       	rcall	.+6      	; 0xb92 <__divmodsi4_neg2>
 b8c:	4e f4       	brtc	.+18     	; 0xba0 <__divmodsi4_exit>
 b8e:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <__negsi2>

00000b92 <__divmodsi4_neg2>:
 b92:	50 95       	com	r21
 b94:	40 95       	com	r20
 b96:	30 95       	com	r19
 b98:	21 95       	neg	r18
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	4f 4f       	sbci	r20, 0xFF	; 255
 b9e:	5f 4f       	sbci	r21, 0xFF	; 255

00000ba0 <__divmodsi4_exit>:
 ba0:	08 95       	ret

00000ba2 <__negsi2>:
 ba2:	90 95       	com	r25
 ba4:	80 95       	com	r24
 ba6:	70 95       	com	r23
 ba8:	61 95       	neg	r22
 baa:	7f 4f       	sbci	r23, 0xFF	; 255
 bac:	8f 4f       	sbci	r24, 0xFF	; 255
 bae:	9f 4f       	sbci	r25, 0xFF	; 255
 bb0:	08 95       	ret

00000bb2 <__muluhisi3>:
 bb2:	0e 94 45 06 	call	0xc8a	; 0xc8a <__umulhisi3>
 bb6:	a5 9f       	mul	r26, r21
 bb8:	90 0d       	add	r25, r0
 bba:	b4 9f       	mul	r27, r20
 bbc:	90 0d       	add	r25, r0
 bbe:	a4 9f       	mul	r26, r20
 bc0:	80 0d       	add	r24, r0
 bc2:	91 1d       	adc	r25, r1
 bc4:	11 24       	eor	r1, r1
 bc6:	08 95       	ret

00000bc8 <__mulshisi3>:
 bc8:	b7 ff       	sbrs	r27, 7
 bca:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <__muluhisi3>

00000bce <__mulohisi3>:
 bce:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__muluhisi3>
 bd2:	82 1b       	sub	r24, r18
 bd4:	93 0b       	sbc	r25, r19
 bd6:	08 95       	ret

00000bd8 <__prologue_saves__>:
 bd8:	2f 92       	push	r2
 bda:	3f 92       	push	r3
 bdc:	4f 92       	push	r4
 bde:	5f 92       	push	r5
 be0:	6f 92       	push	r6
 be2:	7f 92       	push	r7
 be4:	8f 92       	push	r8
 be6:	9f 92       	push	r9
 be8:	af 92       	push	r10
 bea:	bf 92       	push	r11
 bec:	cf 92       	push	r12
 bee:	df 92       	push	r13
 bf0:	ef 92       	push	r14
 bf2:	ff 92       	push	r15
 bf4:	0f 93       	push	r16
 bf6:	1f 93       	push	r17
 bf8:	cf 93       	push	r28
 bfa:	df 93       	push	r29
 bfc:	cd b7       	in	r28, 0x3d	; 61
 bfe:	de b7       	in	r29, 0x3e	; 62
 c00:	ca 1b       	sub	r28, r26
 c02:	db 0b       	sbc	r29, r27
 c04:	0f b6       	in	r0, 0x3f	; 63
 c06:	f8 94       	cli
 c08:	de bf       	out	0x3e, r29	; 62
 c0a:	0f be       	out	0x3f, r0	; 63
 c0c:	cd bf       	out	0x3d, r28	; 61
 c0e:	09 94       	ijmp

00000c10 <__epilogue_restores__>:
 c10:	2a 88       	ldd	r2, Y+18	; 0x12
 c12:	39 88       	ldd	r3, Y+17	; 0x11
 c14:	48 88       	ldd	r4, Y+16	; 0x10
 c16:	5f 84       	ldd	r5, Y+15	; 0x0f
 c18:	6e 84       	ldd	r6, Y+14	; 0x0e
 c1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 c1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 c1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 c20:	aa 84       	ldd	r10, Y+10	; 0x0a
 c22:	b9 84       	ldd	r11, Y+9	; 0x09
 c24:	c8 84       	ldd	r12, Y+8	; 0x08
 c26:	df 80       	ldd	r13, Y+7	; 0x07
 c28:	ee 80       	ldd	r14, Y+6	; 0x06
 c2a:	fd 80       	ldd	r15, Y+5	; 0x05
 c2c:	0c 81       	ldd	r16, Y+4	; 0x04
 c2e:	1b 81       	ldd	r17, Y+3	; 0x03
 c30:	aa 81       	ldd	r26, Y+2	; 0x02
 c32:	b9 81       	ldd	r27, Y+1	; 0x01
 c34:	ce 0f       	add	r28, r30
 c36:	d1 1d       	adc	r29, r1
 c38:	0f b6       	in	r0, 0x3f	; 63
 c3a:	f8 94       	cli
 c3c:	de bf       	out	0x3e, r29	; 62
 c3e:	0f be       	out	0x3f, r0	; 63
 c40:	cd bf       	out	0x3d, r28	; 61
 c42:	ed 01       	movw	r28, r26
 c44:	08 95       	ret

00000c46 <__udivmodsi4>:
 c46:	a1 e2       	ldi	r26, 0x21	; 33
 c48:	1a 2e       	mov	r1, r26
 c4a:	aa 1b       	sub	r26, r26
 c4c:	bb 1b       	sub	r27, r27
 c4e:	fd 01       	movw	r30, r26
 c50:	0d c0       	rjmp	.+26     	; 0xc6c <__udivmodsi4_ep>

00000c52 <__udivmodsi4_loop>:
 c52:	aa 1f       	adc	r26, r26
 c54:	bb 1f       	adc	r27, r27
 c56:	ee 1f       	adc	r30, r30
 c58:	ff 1f       	adc	r31, r31
 c5a:	a2 17       	cp	r26, r18
 c5c:	b3 07       	cpc	r27, r19
 c5e:	e4 07       	cpc	r30, r20
 c60:	f5 07       	cpc	r31, r21
 c62:	20 f0       	brcs	.+8      	; 0xc6c <__udivmodsi4_ep>
 c64:	a2 1b       	sub	r26, r18
 c66:	b3 0b       	sbc	r27, r19
 c68:	e4 0b       	sbc	r30, r20
 c6a:	f5 0b       	sbc	r31, r21

00000c6c <__udivmodsi4_ep>:
 c6c:	66 1f       	adc	r22, r22
 c6e:	77 1f       	adc	r23, r23
 c70:	88 1f       	adc	r24, r24
 c72:	99 1f       	adc	r25, r25
 c74:	1a 94       	dec	r1
 c76:	69 f7       	brne	.-38     	; 0xc52 <__udivmodsi4_loop>
 c78:	60 95       	com	r22
 c7a:	70 95       	com	r23
 c7c:	80 95       	com	r24
 c7e:	90 95       	com	r25
 c80:	9b 01       	movw	r18, r22
 c82:	ac 01       	movw	r20, r24
 c84:	bd 01       	movw	r22, r26
 c86:	cf 01       	movw	r24, r30
 c88:	08 95       	ret

00000c8a <__umulhisi3>:
 c8a:	a2 9f       	mul	r26, r18
 c8c:	b0 01       	movw	r22, r0
 c8e:	b3 9f       	mul	r27, r19
 c90:	c0 01       	movw	r24, r0
 c92:	a3 9f       	mul	r26, r19
 c94:	70 0d       	add	r23, r0
 c96:	81 1d       	adc	r24, r1
 c98:	11 24       	eor	r1, r1
 c9a:	91 1d       	adc	r25, r1
 c9c:	b2 9f       	mul	r27, r18
 c9e:	70 0d       	add	r23, r0
 ca0:	81 1d       	adc	r24, r1
 ca2:	11 24       	eor	r1, r1
 ca4:	91 1d       	adc	r25, r1
 ca6:	08 95       	ret

00000ca8 <_exit>:
 ca8:	f8 94       	cli

00000caa <__stop_program>:
 caa:	ff cf       	rjmp	.-2      	; 0xcaa <__stop_program>
